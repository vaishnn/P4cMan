{
  "version": "1",
  "pip_version": "25.0.1",
  "installed": [
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "requests",
        "version": "2.32.5",
        "dynamic": [
          "author",
          "author-email",
          "classifier",
          "description",
          "description-content-type",
          "home-page",
          "license",
          "license-file",
          "project-url",
          "provides-extra",
          "requires-dist",
          "requires-python",
          "summary"
        ],
        "summary": "Python HTTP for Humans.",
        "description": "# Requests\n\n**Requests** is a simple, yet elegant, HTTP library.\n\n```python\n>>> import requests\n>>> r = requests.get('https://httpbin.org/basic-auth/user/pass', auth=('user', 'pass'))\n>>> r.status_code\n200\n>>> r.headers['content-type']\n'application/json; charset=utf8'\n>>> r.encoding\n'utf-8'\n>>> r.text\n'{\"authenticated\": true, ...'\n>>> r.json()\n{'authenticated': True, ...}\n```\n\nRequests allows you to send HTTP/1.1 requests extremely easily. There’s no need to manually add query strings to your URLs, or to form-encode your `PUT` & `POST` data — but nowadays, just use the `json` method!\n\nRequests is one of the most downloaded Python packages today, pulling in around `30M downloads / week`— according to GitHub, Requests is currently [depended upon](https://github.com/psf/requests/network/dependents?package_id=UGFja2FnZS01NzA4OTExNg%3D%3D) by `1,000,000+` repositories. You may certainly put your trust in this code.\n\n[![Downloads](https://static.pepy.tech/badge/requests/month)](https://pepy.tech/project/requests)\n[![Supported Versions](https://img.shields.io/pypi/pyversions/requests.svg)](https://pypi.org/project/requests)\n[![Contributors](https://img.shields.io/github/contributors/psf/requests.svg)](https://github.com/psf/requests/graphs/contributors)\n\n## Installing Requests and Supported Versions\n\nRequests is available on PyPI:\n\n```console\n$ python -m pip install requests\n```\n\nRequests officially supports Python 3.9+.\n\n## Supported Features & Best–Practices\n\nRequests is ready for the demands of building robust and reliable HTTP–speaking applications, for the needs of today.\n\n- Keep-Alive & Connection Pooling\n- International Domains and URLs\n- Sessions with Cookie Persistence\n- Browser-style TLS/SSL Verification\n- Basic & Digest Authentication\n- Familiar `dict`–like Cookies\n- Automatic Content Decompression and Decoding\n- Multi-part File Uploads\n- SOCKS Proxy Support\n- Connection Timeouts\n- Streaming Downloads\n- Automatic honoring of `.netrc`\n- Chunked HTTP Requests\n\n## API Reference and User Guide available on [Read the Docs](https://requests.readthedocs.io)\n\n[![Read the Docs](https://raw.githubusercontent.com/psf/requests/main/ext/ss.png)](https://requests.readthedocs.io)\n\n## Cloning the repository\n\nWhen cloning the Requests repository, you may need to add the `-c\nfetch.fsck.badTimezone=ignore` flag to avoid an error about a bad commit timestamp (see\n[this issue](https://github.com/psf/requests/issues/2690) for more background):\n\n```shell\ngit clone -c fetch.fsck.badTimezone=ignore https://github.com/psf/requests.git\n```\n\nYou can also apply this setting to your global Git config:\n\n```shell\ngit config --global fetch.fsck.badTimezone ignore\n```\n\n---\n\n[![Kenneth Reitz](https://raw.githubusercontent.com/psf/requests/main/ext/kr.png)](https://kennethreitz.org) [![Python Software Foundation](https://raw.githubusercontent.com/psf/requests/main/ext/psf.png)](https://www.python.org/psf)\n",
        "description_content_type": "text/markdown",
        "home_page": "https://requests.readthedocs.io",
        "author": "Kenneth Reitz",
        "author_email": "me@kennethreitz.org",
        "license": "Apache-2.0",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.14",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_dist": [
          "charset_normalizer<4,>=2",
          "idna<4,>=2.5",
          "urllib3<3,>=1.21.1",
          "certifi>=2017.4.17",
          "PySocks!=1.5.7,>=1.5.6; extra == \"socks\"",
          "chardet<6,>=3.0.2; extra == \"use-chardet-on-py3\""
        ],
        "requires_python": ">=3.9",
        "project_url": [
          "Documentation, https://requests.readthedocs.io",
          "Source, https://github.com/psf/requests"
        ],
        "provides_extra": [
          "security",
          "socks",
          "use-chardet-on-py3"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/requests-2.32.5.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "idna",
        "version": "3.10",
        "summary": "Internationalized Domain Names in Applications (IDNA)",
        "description": "Internationalized Domain Names in Applications (IDNA)\n=====================================================\n\nSupport for the Internationalized Domain Names in\nApplications (IDNA) protocol as specified in `RFC 5891\n<https://tools.ietf.org/html/rfc5891>`_. This is the latest version of\nthe protocol and is sometimes referred to as “IDNA 2008”.\n\nThis library also provides support for Unicode Technical\nStandard 46, `Unicode IDNA Compatibility Processing\n<https://unicode.org/reports/tr46/>`_.\n\nThis acts as a suitable replacement for the “encodings.idna”\nmodule that comes with the Python standard library, but which\nonly supports the older superseded IDNA specification (`RFC 3490\n<https://tools.ietf.org/html/rfc3490>`_).\n\nBasic functions are simply executed:\n\n.. code-block:: pycon\n\n    >>> import idna\n    >>> idna.encode('ドメイン.テスト')\n    b'xn--eckwd4c7c.xn--zckzah'\n    >>> print(idna.decode('xn--eckwd4c7c.xn--zckzah'))\n    ドメイン.テスト\n\n\nInstallation\n------------\n\nThis package is available for installation from PyPI:\n\n.. code-block:: bash\n\n    $ python3 -m pip install idna\n\n\nUsage\n-----\n\nFor typical usage, the ``encode`` and ``decode`` functions will take a\ndomain name argument and perform a conversion to A-labels or U-labels\nrespectively.\n\n.. code-block:: pycon\n\n    >>> import idna\n    >>> idna.encode('ドメイン.テスト')\n    b'xn--eckwd4c7c.xn--zckzah'\n    >>> print(idna.decode('xn--eckwd4c7c.xn--zckzah'))\n    ドメイン.テスト\n\nYou may use the codec encoding and decoding methods using the\n``idna.codec`` module:\n\n.. code-block:: pycon\n\n    >>> import idna.codec\n    >>> print('домен.испытание'.encode('idna2008'))\n    b'xn--d1acufc.xn--80akhbyknj4f'\n    >>> print(b'xn--d1acufc.xn--80akhbyknj4f'.decode('idna2008'))\n    домен.испытание\n\nConversions can be applied at a per-label basis using the ``ulabel`` or\n``alabel`` functions if necessary:\n\n.. code-block:: pycon\n\n    >>> idna.alabel('测试')\n    b'xn--0zwm56d'\n\nCompatibility Mapping (UTS #46)\n+++++++++++++++++++++++++++++++\n\nAs described in `RFC 5895 <https://tools.ietf.org/html/rfc5895>`_, the\nIDNA specification does not normalize input from different potential\nways a user may input a domain name. This functionality, known as\na “mapping”, is considered by the specification to be a local\nuser-interface issue distinct from IDNA conversion functionality.\n\nThis library provides one such mapping that was developed by the\nUnicode Consortium. Known as `Unicode IDNA Compatibility Processing\n<https://unicode.org/reports/tr46/>`_, it provides for both a regular\nmapping for typical applications, as well as a transitional mapping to\nhelp migrate from older IDNA 2003 applications. Strings are\npreprocessed according to Section 4.4 “Preprocessing for IDNA2008”\nprior to the IDNA operations.\n\nFor example, “Königsgäßchen” is not a permissible label as *LATIN\nCAPITAL LETTER K* is not allowed (nor are capital letters in general).\nUTS 46 will convert this into lower case prior to applying the IDNA\nconversion.\n\n.. code-block:: pycon\n\n    >>> import idna\n    >>> idna.encode('Königsgäßchen')\n    ...\n    idna.core.InvalidCodepoint: Codepoint U+004B at position 1 of 'Königsgäßchen' not allowed\n    >>> idna.encode('Königsgäßchen', uts46=True)\n    b'xn--knigsgchen-b4a3dun'\n    >>> print(idna.decode('xn--knigsgchen-b4a3dun'))\n    königsgäßchen\n\nTransitional processing provides conversions to help transition from\nthe older 2003 standard to the current standard. For example, in the\noriginal IDNA specification, the *LATIN SMALL LETTER SHARP S* (ß) was\nconverted into two *LATIN SMALL LETTER S* (ss), whereas in the current\nIDNA specification this conversion is not performed.\n\n.. code-block:: pycon\n\n    >>> idna.encode('Königsgäßchen', uts46=True, transitional=True)\n    'xn--knigsgsschen-lcb0w'\n\nImplementers should use transitional processing with caution, only in\nrare cases where conversion from legacy labels to current labels must be\nperformed (i.e. IDNA implementations that pre-date 2008). For typical\napplications that just need to convert labels, transitional processing\nis unlikely to be beneficial and could produce unexpected incompatible\nresults.\n\n``encodings.idna`` Compatibility\n++++++++++++++++++++++++++++++++\n\nFunction calls from the Python built-in ``encodings.idna`` module are\nmapped to their IDNA 2008 equivalents using the ``idna.compat`` module.\nSimply substitute the ``import`` clause in your code to refer to the new\nmodule name.\n\nExceptions\n----------\n\nAll errors raised during the conversion following the specification\nshould raise an exception derived from the ``idna.IDNAError`` base\nclass.\n\nMore specific exceptions that may be generated as ``idna.IDNABidiError``\nwhen the error reflects an illegal combination of left-to-right and\nright-to-left characters in a label; ``idna.InvalidCodepoint`` when\na specific codepoint is an illegal character in an IDN label (i.e.\nINVALID); and ``idna.InvalidCodepointContext`` when the codepoint is\nillegal based on its positional context (i.e. it is CONTEXTO or CONTEXTJ\nbut the contextual requirements are not satisfied.)\n\nBuilding and Diagnostics\n------------------------\n\nThe IDNA and UTS 46 functionality relies upon pre-calculated lookup\ntables for performance. These tables are derived from computing against\neligibility criteria in the respective standards. These tables are\ncomputed using the command-line script ``tools/idna-data``.\n\nThis tool will fetch relevant codepoint data from the Unicode repository\nand perform the required calculations to identify eligibility. There are\nthree main modes:\n\n* ``idna-data make-libdata``. Generates ``idnadata.py`` and\n  ``uts46data.py``, the pre-calculated lookup tables used for IDNA and\n  UTS 46 conversions. Implementers who wish to track this library against\n  a different Unicode version may use this tool to manually generate a\n  different version of the ``idnadata.py`` and ``uts46data.py`` files.\n\n* ``idna-data make-table``. Generate a table of the IDNA disposition\n  (e.g. PVALID, CONTEXTJ, CONTEXTO) in the format found in Appendix\n  B.1 of RFC 5892 and the pre-computed tables published by `IANA\n  <https://www.iana.org/>`_.\n\n* ``idna-data U+0061``. Prints debugging output on the various\n  properties associated with an individual Unicode codepoint (in this\n  case, U+0061), that are used to assess the IDNA and UTS 46 status of a\n  codepoint. This is helpful in debugging or analysis.\n\nThe tool accepts a number of arguments, described using ``idna-data\n-h``. Most notably, the ``--version`` argument allows the specification\nof the version of Unicode to be used in computing the table data. For\nexample, ``idna-data --version 9.0.0 make-libdata`` will generate\nlibrary data against Unicode 9.0.0.\n\n\nAdditional Notes\n----------------\n\n* **Packages**. The latest tagged release version is published in the\n  `Python Package Index <https://pypi.org/project/idna/>`_.\n\n* **Version support**. This library supports Python 3.6 and higher.\n  As this library serves as a low-level toolkit for a variety of\n  applications, many of which strive for broad compatibility with older\n  Python versions, there is no rush to remove older interpreter support.\n  Removing support for older versions should be well justified in that the\n  maintenance burden has become too high.\n\n* **Python 2**. Python 2 is supported by version 2.x of this library.\n  Use \"idna<3\" in your requirements file if you need this library for\n  a Python 2 application. Be advised that these versions are no longer\n  actively developed.\n\n* **Testing**. The library has a test suite based on each rule of the\n  IDNA specification, as well as tests that are provided as part of the\n  Unicode Technical Standard 46, `Unicode IDNA Compatibility Processing\n  <https://unicode.org/reports/tr46/>`_.\n\n* **Emoji**. It is an occasional request to support emoji domains in\n  this library. Encoding of symbols like emoji is expressly prohibited by\n  the technical standard IDNA 2008 and emoji domains are broadly phased\n  out across the domain industry due to associated security risks. For\n  now, applications that need to support these non-compliant labels\n  may wish to consider trying the encode/decode operation in this library\n  first, and then falling back to using `encodings.idna`. See `the Github\n  project <https://github.com/kjd/idna/issues/18>`_ for more discussion.\n\n",
        "description_content_type": "text/x-rst",
        "author_email": "Kim Davies <kim+pypi@gumleaf.org>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: Name Service (DNS)",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "ruff >= 0.6.2 ; extra == \"all\"",
          "mypy >= 1.11.2 ; extra == \"all\"",
          "pytest >= 8.3.2 ; extra == \"all\"",
          "flake8 >= 7.1.1 ; extra == \"all\""
        ],
        "requires_python": ">=3.6",
        "project_url": [
          "Changelog, https://github.com/kjd/idna/blob/master/HISTORY.rst",
          "Issue tracker, https://github.com/kjd/idna/issues",
          "Source, https://github.com/kjd/idna"
        ],
        "provides_extra": [
          "all"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/idna-3.10.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "urllib3",
        "version": "2.5.0",
        "summary": "HTTP library with thread-safe connection pooling, file post, and more.",
        "description": "<h1 align=\"center\">\n\n![urllib3](https://github.com/urllib3/urllib3/raw/main/docs/_static/banner_github.svg)\n\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/urllib3\"><img alt=\"PyPI Version\" src=\"https://img.shields.io/pypi/v/urllib3.svg?maxAge=86400\" /></a>\n  <a href=\"https://pypi.org/project/urllib3\"><img alt=\"Python Versions\" src=\"https://img.shields.io/pypi/pyversions/urllib3.svg?maxAge=86400\" /></a>\n  <a href=\"https://discord.gg/urllib3\"><img alt=\"Join our Discord\" src=\"https://img.shields.io/discord/756342717725933608?color=%237289da&label=discord\" /></a>\n  <a href=\"https://github.com/urllib3/urllib3/actions?query=workflow%3ACI\"><img alt=\"Coverage Status\" src=\"https://img.shields.io/badge/coverage-100%25-success\" /></a>\n  <a href=\"https://github.com/urllib3/urllib3/actions/workflows/ci.yml?query=branch%3Amain\"><img alt=\"Build Status on GitHub\" src=\"https://github.com/urllib3/urllib3/actions/workflows/ci.yml/badge.svg?branch:main&workflow:CI\" /></a>\n  <a href=\"https://urllib3.readthedocs.io\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/urllib3/badge/?version=latest\" /></a><br>\n  <a href=\"https://deps.dev/pypi/urllib3\"><img alt=\"OpenSSF Scorecard\" src=\"https://api.securityscorecards.dev/projects/github.com/urllib3/urllib3/badge\" /></a>\n  <a href=\"https://slsa.dev\"><img alt=\"SLSA 3\" src=\"https://slsa.dev/images/gh-badge-level3.svg\" /></a>\n  <a href=\"https://bestpractices.coreinfrastructure.org/projects/6227\"><img alt=\"CII Best Practices\" src=\"https://bestpractices.coreinfrastructure.org/projects/6227/badge\" /></a>\n</p>\n\nurllib3 is a powerful, *user-friendly* HTTP client for Python. Much of the\nPython ecosystem already uses urllib3 and you should too.\nurllib3 brings many critical features that are missing from the Python\nstandard libraries:\n\n- Thread safety.\n- Connection pooling.\n- Client-side SSL/TLS verification.\n- File uploads with multipart encoding.\n- Helpers for retrying requests and dealing with HTTP redirects.\n- Support for gzip, deflate, brotli, and zstd encoding.\n- Proxy support for HTTP and SOCKS.\n- 100% test coverage.\n\nurllib3 is powerful and easy to use:\n\n```python3\n>>> import urllib3\n>>> resp = urllib3.request(\"GET\", \"http://httpbin.org/robots.txt\")\n>>> resp.status\n200\n>>> resp.data\nb\"User-agent: *\\nDisallow: /deny\\n\"\n```\n\n## Installing\n\nurllib3 can be installed with [pip](https://pip.pypa.io):\n\n```bash\n$ python -m pip install urllib3\n```\n\nAlternatively, you can grab the latest source code from [GitHub](https://github.com/urllib3/urllib3):\n\n```bash\n$ git clone https://github.com/urllib3/urllib3.git\n$ cd urllib3\n$ pip install .\n```\n\n\n## Documentation\n\nurllib3 has usage and reference documentation at [urllib3.readthedocs.io](https://urllib3.readthedocs.io).\n\n\n## Community\n\nurllib3 has a [community Discord channel](https://discord.gg/urllib3) for asking questions and\ncollaborating with other contributors. Drop by and say hello 👋\n\n\n## Contributing\n\nurllib3 happily accepts contributions. Please see our\n[contributing documentation](https://urllib3.readthedocs.io/en/latest/contributing.html)\nfor some tips on getting started.\n\n\n## Security Disclosures\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure with maintainers.\n\n\n## Maintainers\n\n- [@sethmlarson](https://github.com/sethmlarson) (Seth M. Larson)\n- [@pquentin](https://github.com/pquentin) (Quentin Pradet)\n- [@illia-v](https://github.com/illia-v) (Illia Volochii)\n- [@theacodes](https://github.com/theacodes) (Thea Flowers)\n- [@haikuginger](https://github.com/haikuginger) (Jess Shapiro)\n- [@lukasa](https://github.com/lukasa) (Cory Benfield)\n- [@sigmavirus24](https://github.com/sigmavirus24) (Ian Stapleton Cordasco)\n- [@shazow](https://github.com/shazow) (Andrey Petrov)\n\n👋\n\n\n## Sponsorship\n\nIf your company benefits from this library, please consider [sponsoring its\ndevelopment](https://urllib3.readthedocs.io/en/latest/sponsors.html).\n\n\n## For Enterprise\n\nProfessional support for urllib3 is available as part of the [Tidelift\nSubscription][1].  Tidelift gives software development teams a single source for\npurchasing and maintaining their software, with professional grade assurances\nfrom the experts who know it best, while seamlessly integrating with existing\ntools.\n\n[1]: https://tidelift.com/subscription/pkg/pypi-urllib3?utm_source=pypi-urllib3&utm_medium=referral&utm_campaign=readme\n",
        "description_content_type": "text/markdown",
        "keywords": [
          "filepost",
          "http",
          "httplib",
          "https",
          "pooling",
          "ssl",
          "threadsafe",
          "urllib"
        ],
        "author_email": "Andrey Petrov <andrey.petrov@shazow.net>",
        "maintainer_email": "Seth Michael Larson <sethmichaellarson@gmail.com>, Quentin Pradet <quentin@pradet.me>, Illia Volochii <illia.volochii@gmail.com>",
        "license_expression": "MIT",
        "license_file": [
          "LICENSE.txt"
        ],
        "classifier": [
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_dist": [
          "brotli>=1.0.9; (platform_python_implementation == 'CPython') and extra == 'brotli'",
          "brotlicffi>=0.8.0; (platform_python_implementation != 'CPython') and extra == 'brotli'",
          "h2<5,>=4; extra == 'h2'",
          "pysocks!=1.5.7,<2.0,>=1.5.6; extra == 'socks'",
          "zstandard>=0.18.0; extra == 'zstd'"
        ],
        "requires_python": ">=3.9",
        "project_url": [
          "Changelog, https://github.com/urllib3/urllib3/blob/main/CHANGES.rst",
          "Documentation, https://urllib3.readthedocs.io",
          "Code, https://github.com/urllib3/urllib3",
          "Issue tracker, https://github.com/urllib3/urllib3/issues"
        ],
        "provides_extra": [
          "brotli",
          "h2",
          "socks",
          "zstd"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/urllib3-2.5.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "charset-normalizer",
        "version": "3.4.3",
        "dynamic": [
          "license-file"
        ],
        "summary": "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.",
        "description": "<h1 align=\"center\">Charset Detection, for Everyone 👋</h1>\n\n<p align=\"center\">\n  <sup>The Real First Universal Charset Detector</sup><br>\n  <a href=\"https://pypi.org/project/charset-normalizer\">\n    <img src=\"https://img.shields.io/pypi/pyversions/charset_normalizer.svg?orange=blue\" />\n  </a>\n  <a href=\"https://pepy.tech/project/charset-normalizer/\">\n    <img alt=\"Download Count Total\" src=\"https://static.pepy.tech/badge/charset-normalizer/month\" />\n  </a>\n  <a href=\"https://bestpractices.coreinfrastructure.org/projects/7297\">\n    <img src=\"https://bestpractices.coreinfrastructure.org/projects/7297/badge\">\n  </a>\n</p>\n<p align=\"center\">\n  <sup><i>Featured Packages</i></sup><br>\n  <a href=\"https://github.com/jawah/niquests\">\n   <img alt=\"Static Badge\" src=\"https://img.shields.io/badge/Niquests-Most_Advanced_HTTP_Client-cyan\">\n  </a>\n  <a href=\"https://github.com/jawah/wassima\">\n   <img alt=\"Static Badge\" src=\"https://img.shields.io/badge/Wassima-Certifi_Replacement-cyan\">\n  </a>\n</p>\n<p align=\"center\">\n  <sup><i>In other language (unofficial port - by the community)</i></sup><br>\n  <a href=\"https://github.com/nickspring/charset-normalizer-rs\">\n   <img alt=\"Static Badge\" src=\"https://img.shields.io/badge/Rust-red\">\n  </a>\n</p>\n\n> A library that helps you read text from an unknown charset encoding.<br /> Motivated by `chardet`,\n> I'm trying to resolve the issue by taking a new approach.\n> All IANA character set names for which the Python core library provides codecs are supported.\n\n<p align=\"center\">\n  >>>>> <a href=\"https://charsetnormalizerweb.ousret.now.sh\" target=\"_blank\">👉 Try Me Online Now, Then Adopt Me 👈 </a> <<<<<\n</p>\n\nThis project offers you an alternative to **Universal Charset Encoding Detector**, also known as **Chardet**.\n\n| Feature                                          | [Chardet](https://github.com/chardet/chardet) |                                         Charset Normalizer                                         | [cChardet](https://github.com/PyYoshi/cChardet) |\n|--------------------------------------------------|:---------------------------------------------:|:--------------------------------------------------------------------------------------------------:|:-----------------------------------------------:|\n| `Fast`                                           |                       ❌                       |                                                 ✅                                                  |                        ✅                        |\n| `Universal**`                                    |                       ❌                       |                                                 ✅                                                  |                        ❌                        |\n| `Reliable` **without** distinguishable standards |                       ❌                       |                                                 ✅                                                  |                        ✅                        |\n| `Reliable` **with** distinguishable standards    |                       ✅                       |                                                 ✅                                                  |                        ✅                        |\n| `License`                                        |           LGPL-2.1<br>_restrictive_           |                                                MIT                                                 |            MPL-1.1<br>_restrictive_             |\n| `Native Python`                                  |                       ✅                       |                                                 ✅                                                  |                        ❌                        |\n| `Detect spoken language`                         |                       ❌                       |                                                 ✅                                                  |                       N/A                       |\n| `UnicodeDecodeError Safety`                      |                       ❌                       |                                                 ✅                                                  |                        ❌                        |\n| `Whl Size (min)`                                 |                   193.6 kB                    |                                               42 kB                                                |                     ~200 kB                     |\n| `Supported Encoding`                             |                      33                       | 🎉 [99](https://charset-normalizer.readthedocs.io/en/latest/user/support.html#supported-encodings) |                       40                        |\n\n<p align=\"center\">\n<img src=\"https://i.imgflip.com/373iay.gif\" alt=\"Reading Normalized Text\" width=\"226\"/><img src=\"https://media.tenor.com/images/c0180f70732a18b4965448d33adba3d0/tenor.gif\" alt=\"Cat Reading Text\" width=\"200\"/>\n</p>\n\n*\\*\\* : They are clearly using specific code for a specific encoding even if covering most of used one*<br>\n\n## ⚡ Performance\n\nThis package offer better performance than its counterpart Chardet. Here are some numbers.\n\n| Package                                       | Accuracy | Mean per file (ms) | File per sec (est) |\n|-----------------------------------------------|:--------:|:------------------:|:------------------:|\n| [chardet](https://github.com/chardet/chardet) |   86 %   |       63 ms        |    16 file/sec     |\n| charset-normalizer                            | **98 %** |     **10 ms**      |    100 file/sec    |\n\n| Package                                       | 99th percentile | 95th percentile | 50th percentile |\n|-----------------------------------------------|:---------------:|:---------------:|:---------------:|\n| [chardet](https://github.com/chardet/chardet) |     265 ms      |      71 ms      |      7 ms       |\n| charset-normalizer                            |     100 ms      |      50 ms      |      5 ms       |\n\n_updated as of december 2024 using CPython 3.12_\n\nChardet's performance on larger file (1MB+) are very poor. Expect huge difference on large payload.\n\n> Stats are generated using 400+ files using default parameters. More details on used files, see GHA workflows.\n> And yes, these results might change at any time. The dataset can be updated to include more files.\n> The actual delays heavily depends on your CPU capabilities. The factors should remain the same.\n> Keep in mind that the stats are generous and that Chardet accuracy vs our is measured using Chardet initial capability\n> (e.g. Supported Encoding) Challenge-them if you want.\n\n## ✨ Installation\n\nUsing pip:\n\n```sh\npip install charset-normalizer -U\n```\n\n## 🚀 Basic Usage\n\n### CLI\nThis package comes with a CLI.\n\n```\nusage: normalizer [-h] [-v] [-a] [-n] [-m] [-r] [-f] [-t THRESHOLD]\n                  file [file ...]\n\nThe Real First Universal Charset Detector. Discover originating encoding used\non text file. Normalize text to unicode.\n\npositional arguments:\n  files                 File(s) to be analysed\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Display complementary information about file if any.\n                        Stdout will contain logs about the detection process.\n  -a, --with-alternative\n                        Output complementary possibilities if any. Top-level\n                        JSON WILL be a list.\n  -n, --normalize       Permit to normalize input file. If not set, program\n                        does not write anything.\n  -m, --minimal         Only output the charset detected to STDOUT. Disabling\n                        JSON output.\n  -r, --replace         Replace file when trying to normalize it instead of\n                        creating a new one.\n  -f, --force           Replace file without asking if you are sure, use this\n                        flag with caution.\n  -t THRESHOLD, --threshold THRESHOLD\n                        Define a custom maximum amount of chaos allowed in\n                        decoded content. 0. <= chaos <= 1.\n  --version             Show version information and exit.\n```\n\n```bash\nnormalizer ./data/sample.1.fr.srt\n```\n\nor\n\n```bash\npython -m charset_normalizer ./data/sample.1.fr.srt\n```\n\n🎉 Since version 1.4.0 the CLI produce easily usable stdout result in JSON format.\n\n```json\n{\n    \"path\": \"/home/default/projects/charset_normalizer/data/sample.1.fr.srt\",\n    \"encoding\": \"cp1252\",\n    \"encoding_aliases\": [\n        \"1252\",\n        \"windows_1252\"\n    ],\n    \"alternative_encodings\": [\n        \"cp1254\",\n        \"cp1256\",\n        \"cp1258\",\n        \"iso8859_14\",\n        \"iso8859_15\",\n        \"iso8859_16\",\n        \"iso8859_3\",\n        \"iso8859_9\",\n        \"latin_1\",\n        \"mbcs\"\n    ],\n    \"language\": \"French\",\n    \"alphabets\": [\n        \"Basic Latin\",\n        \"Latin-1 Supplement\"\n    ],\n    \"has_sig_or_bom\": false,\n    \"chaos\": 0.149,\n    \"coherence\": 97.152,\n    \"unicode_path\": null,\n    \"is_preferred\": true\n}\n```\n\n### Python\n*Just print out normalized text*\n```python\nfrom charset_normalizer import from_path\n\nresults = from_path('./my_subtitle.srt')\n\nprint(str(results.best()))\n```\n\n*Upgrade your code without effort*\n```python\nfrom charset_normalizer import detect\n```\n\nThe above code will behave the same as **chardet**. We ensure that we offer the best (reasonable) BC result possible.\n\nSee the docs for advanced usage : [readthedocs.io](https://charset-normalizer.readthedocs.io/en/latest/)\n\n## 😇 Why\n\nWhen I started using Chardet, I noticed that it was not suited to my expectations, and I wanted to propose a\nreliable alternative using a completely different method. Also! I never back down on a good challenge!\n\nI **don't care** about the **originating charset** encoding, because **two different tables** can\nproduce **two identical rendered string.**\nWhat I want is to get readable text, the best I can.\n\nIn a way, **I'm brute forcing text decoding.** How cool is that ? 😎\n\nDon't confuse package **ftfy** with charset-normalizer or chardet. ftfy goal is to repair Unicode string whereas charset-normalizer to convert raw file in unknown encoding to unicode.\n\n## 🍰 How\n\n  - Discard all charset encoding table that could not fit the binary content.\n  - Measure noise, or the mess once opened (by chunks) with a corresponding charset encoding.\n  - Extract matches with the lowest mess detected.\n  - Additionally, we measure coherence / probe for a language.\n\n**Wait a minute**, what is noise/mess and coherence according to **YOU ?**\n\n*Noise :* I opened hundred of text files, **written by humans**, with the wrong encoding table. **I observed**, then\n**I established** some ground rules about **what is obvious** when **it seems like** a mess (aka. defining noise in rendered text).\n I know that my interpretation of what is noise is probably incomplete, feel free to contribute in order to\n improve or rewrite it.\n\n*Coherence :* For each language there is on earth, we have computed ranked letter appearance occurrences (the best we can). So I thought\nthat intel is worth something here. So I use those records against decoded text to check if I can detect intelligent design.\n\n## ⚡ Known limitations\n\n  - Language detection is unreliable when text contains two or more languages sharing identical letters. (eg. HTML (english tags) + Turkish content (Sharing Latin characters))\n  - Every charset detector heavily depends on sufficient content. In common cases, do not bother run detection on very tiny content.\n\n## ⚠️ About Python EOLs\n\n**If you are running:**\n\n- Python >=2.7,<3.5: Unsupported\n- Python 3.5: charset-normalizer < 2.1\n- Python 3.6: charset-normalizer < 3.1\n- Python 3.7: charset-normalizer < 4.0\n\nUpgrade your Python interpreter as soon as possible.\n\n## 👤 Contributing\n\nContributions, issues and feature requests are very much welcome.<br />\nFeel free to check [issues page](https://github.com/ousret/charset_normalizer/issues) if you want to contribute.\n\n## 📝 License\n\nCopyright © [Ahmed TAHRI @Ousret](https://github.com/Ousret).<br />\nThis project is [MIT](https://github.com/Ousret/charset_normalizer/blob/master/LICENSE) licensed.\n\nCharacters frequencies used in this project © 2012 [Denny Vrandečić](http://simia.net/letters/)\n\n## 💼 For Enterprise\n\nProfessional support for charset-normalizer is available as part of the [Tidelift\nSubscription][1]. Tidelift gives software development teams a single source for\npurchasing and maintaining their software, with professional grade assurances\nfrom the experts who know it best, while seamlessly integrating with existing\ntools.\n\n[1]: https://tidelift.com/subscription/pkg/pypi-charset-normalizer?utm_source=pypi-charset-normalizer&utm_medium=readme\n\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/7297/badge)](https://www.bestpractices.dev/projects/7297)\n\n# Changelog\nAll notable changes to charset-normalizer will be documented in this file. This project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## [3.4.3](https://github.com/Ousret/charset_normalizer/compare/3.4.2...3.4.3) (2025-08-09)\n\n### Changed\n- mypy(c) is no longer a required dependency at build time if `CHARSET_NORMALIZER_USE_MYPYC` isn't set to `1`. (#595) (#583)\n- automatically lower confidence on small bytes samples that are not Unicode in `detect` output legacy function. (#391)\n\n### Added\n- Custom build backend to overcome inability to mark mypy as an optional dependency in the build phase.\n- Support for Python 3.14\n\n### Fixed\n- sdist archive contained useless directories.\n- automatically fallback on valid UTF-16 or UTF-32 even if the md says it's noisy. (#633)\n\n### Misc\n- SBOM are automatically published to the relevant GitHub release to comply with regulatory changes.\n  Each published wheel comes with its SBOM. We choose CycloneDX as the format.\n- Prebuilt optimized wheel are no longer distributed by default for CPython 3.7 due to a change in cibuildwheel.\n\n## [3.4.2](https://github.com/Ousret/charset_normalizer/compare/3.4.1...3.4.2) (2025-05-02)\n\n### Fixed\n- Addressed the DeprecationWarning in our CLI regarding `argparse.FileType` by backporting the target class into the package. (#591)\n- Improved the overall reliability of the detector with CJK Ideographs. (#605) (#587)\n\n### Changed\n- Optional mypyc compilation upgraded to version 1.15 for Python >= 3.8\n\n## [3.4.1](https://github.com/Ousret/charset_normalizer/compare/3.4.0...3.4.1) (2024-12-24)\n\n### Changed\n- Project metadata are now stored using `pyproject.toml` instead of `setup.cfg` using setuptools as the build backend.\n- Enforce annotation delayed loading for a simpler and consistent types in the project.\n- Optional mypyc compilation upgraded to version 1.14 for Python >= 3.8\n\n### Added\n- pre-commit configuration.\n- noxfile.\n\n### Removed\n- `build-requirements.txt` as per using `pyproject.toml` native build configuration.\n- `bin/integration.py` and `bin/serve.py` in favor of downstream integration test (see noxfile).\n- `setup.cfg` in favor of `pyproject.toml` metadata configuration.\n- Unused `utils.range_scan` function.\n\n### Fixed\n- Converting content to Unicode bytes may insert `utf_8` instead of preferred `utf-8`. (#572)\n- Deprecation warning \"'count' is passed as positional argument\" when converting to Unicode bytes on Python 3.13+\n\n## [3.4.0](https://github.com/Ousret/charset_normalizer/compare/3.3.2...3.4.0) (2024-10-08)\n\n### Added\n- Argument `--no-preemptive` in the CLI to prevent the detector to search for hints.\n- Support for Python 3.13 (#512)\n\n### Fixed\n- Relax the TypeError exception thrown when trying to compare a CharsetMatch with anything else than a CharsetMatch.\n- Improved the general reliability of the detector based on user feedbacks. (#520) (#509) (#498) (#407) (#537)\n- Declared charset in content (preemptive detection) not changed when converting to utf-8 bytes. (#381)\n\n## [3.3.2](https://github.com/Ousret/charset_normalizer/compare/3.3.1...3.3.2) (2023-10-31)\n\n### Fixed\n- Unintentional memory usage regression when using large payload that match several encoding (#376)\n- Regression on some detection case showcased in the documentation (#371)\n\n### Added\n- Noise (md) probe that identify malformed arabic representation due to the presence of letters in isolated form (credit to my wife)\n\n## [3.3.1](https://github.com/Ousret/charset_normalizer/compare/3.3.0...3.3.1) (2023-10-22)\n\n### Changed\n- Optional mypyc compilation upgraded to version 1.6.1 for Python >= 3.8\n- Improved the general detection reliability based on reports from the community\n\n## [3.3.0](https://github.com/Ousret/charset_normalizer/compare/3.2.0...3.3.0) (2023-09-30)\n\n### Added\n- Allow to execute the CLI (e.g. normalizer) through `python -m charset_normalizer.cli` or `python -m charset_normalizer`\n- Support for 9 forgotten encoding that are supported by Python but unlisted in `encoding.aliases` as they have no alias (#323)\n\n### Removed\n- (internal) Redundant utils.is_ascii function and unused function is_private_use_only\n- (internal) charset_normalizer.assets is moved inside charset_normalizer.constant\n\n### Changed\n- (internal) Unicode code blocks in constants are updated using the latest v15.0.0 definition to improve detection\n- Optional mypyc compilation upgraded to version 1.5.1 for Python >= 3.8\n\n### Fixed\n- Unable to properly sort CharsetMatch when both chaos/noise and coherence were close due to an unreachable condition in \\_\\_lt\\_\\_ (#350)\n\n## [3.2.0](https://github.com/Ousret/charset_normalizer/compare/3.1.0...3.2.0) (2023-06-07)\n\n### Changed\n- Typehint for function `from_path` no longer enforce `PathLike` as its first argument\n- Minor improvement over the global detection reliability\n\n### Added\n- Introduce function `is_binary` that relies on main capabilities, and optimized to detect binaries\n- Propagate `enable_fallback` argument throughout `from_bytes`, `from_path`, and `from_fp` that allow a deeper control over the detection (default True)\n- Explicit support for Python 3.12\n\n### Fixed\n- Edge case detection failure where a file would contain 'very-long' camel cased word (Issue #289)\n\n## [3.1.0](https://github.com/Ousret/charset_normalizer/compare/3.0.1...3.1.0) (2023-03-06)\n\n### Added\n- Argument `should_rename_legacy` for legacy function `detect` and disregard any new arguments without errors (PR #262)\n\n### Removed\n- Support for Python 3.6 (PR #260)\n\n### Changed\n- Optional speedup provided by mypy/c 1.0.1\n\n## [3.0.1](https://github.com/Ousret/charset_normalizer/compare/3.0.0...3.0.1) (2022-11-18)\n\n### Fixed\n- Multi-bytes cutter/chunk generator did not always cut correctly (PR #233)\n\n### Changed\n- Speedup provided by mypy/c 0.990 on Python >= 3.7\n\n## [3.0.0](https://github.com/Ousret/charset_normalizer/compare/2.1.1...3.0.0) (2022-10-20)\n\n### Added\n- Extend the capability of explain=True when cp_isolation contains at most two entries (min one), will log in details of the Mess-detector results\n- Support for alternative language frequency set in charset_normalizer.assets.FREQUENCIES\n- Add parameter `language_threshold` in `from_bytes`, `from_path` and `from_fp` to adjust the minimum expected coherence ratio\n- `normalizer --version` now specify if current version provide extra speedup (meaning mypyc compilation whl)\n\n### Changed\n- Build with static metadata using 'build' frontend\n- Make the language detection stricter\n- Optional: Module `md.py` can be compiled using Mypyc to provide an extra speedup up to 4x faster than v2.1\n\n### Fixed\n- CLI with opt --normalize fail when using full path for files\n- TooManyAccentuatedPlugin induce false positive on the mess detection when too few alpha character have been fed to it\n- Sphinx warnings when generating the documentation\n\n### Removed\n- Coherence detector no longer return 'Simple English' instead return 'English'\n- Coherence detector no longer return 'Classical Chinese' instead return 'Chinese'\n- Breaking: Method `first()` and `best()` from CharsetMatch\n- UTF-7 will no longer appear as \"detected\" without a recognized SIG/mark (is unreliable/conflict with ASCII)\n- Breaking: Class aliases CharsetDetector, CharsetDoctor, CharsetNormalizerMatch and CharsetNormalizerMatches\n- Breaking: Top-level function `normalize`\n- Breaking: Properties `chaos_secondary_pass`, `coherence_non_latin` and `w_counter` from CharsetMatch\n- Support for the backport `unicodedata2`\n\n## [3.0.0rc1](https://github.com/Ousret/charset_normalizer/compare/3.0.0b2...3.0.0rc1) (2022-10-18)\n\n### Added\n- Extend the capability of explain=True when cp_isolation contains at most two entries (min one), will log in details of the Mess-detector results\n- Support for alternative language frequency set in charset_normalizer.assets.FREQUENCIES\n- Add parameter `language_threshold` in `from_bytes`, `from_path` and `from_fp` to adjust the minimum expected coherence ratio\n\n### Changed\n- Build with static metadata using 'build' frontend\n- Make the language detection stricter\n\n### Fixed\n- CLI with opt --normalize fail when using full path for files\n- TooManyAccentuatedPlugin induce false positive on the mess detection when too few alpha character have been fed to it\n\n### Removed\n- Coherence detector no longer return 'Simple English' instead return 'English'\n- Coherence detector no longer return 'Classical Chinese' instead return 'Chinese'\n\n## [3.0.0b2](https://github.com/Ousret/charset_normalizer/compare/3.0.0b1...3.0.0b2) (2022-08-21)\n\n### Added\n- `normalizer --version` now specify if current version provide extra speedup (meaning mypyc compilation whl)\n\n### Removed\n- Breaking: Method `first()` and `best()` from CharsetMatch\n- UTF-7 will no longer appear as \"detected\" without a recognized SIG/mark (is unreliable/conflict with ASCII)\n\n### Fixed\n- Sphinx warnings when generating the documentation\n\n## [3.0.0b1](https://github.com/Ousret/charset_normalizer/compare/2.1.0...3.0.0b1) (2022-08-15)\n\n### Changed\n- Optional: Module `md.py` can be compiled using Mypyc to provide an extra speedup up to 4x faster than v2.1\n\n### Removed\n- Breaking: Class aliases CharsetDetector, CharsetDoctor, CharsetNormalizerMatch and CharsetNormalizerMatches\n- Breaking: Top-level function `normalize`\n- Breaking: Properties `chaos_secondary_pass`, `coherence_non_latin` and `w_counter` from CharsetMatch\n- Support for the backport `unicodedata2`\n\n## [2.1.1](https://github.com/Ousret/charset_normalizer/compare/2.1.0...2.1.1) (2022-08-19)\n\n### Deprecated\n- Function `normalize` scheduled for removal in 3.0\n\n### Changed\n- Removed useless call to decode in fn is_unprintable (#206)\n\n### Fixed\n- Third-party library (i18n xgettext) crashing not recognizing utf_8 (PEP 263) with underscore from [@aleksandernovikov](https://github.com/aleksandernovikov) (#204)\n\n## [2.1.0](https://github.com/Ousret/charset_normalizer/compare/2.0.12...2.1.0) (2022-06-19)\n\n### Added\n- Output the Unicode table version when running the CLI with `--version` (PR #194)\n\n### Changed\n- Re-use decoded buffer for single byte character sets from [@nijel](https://github.com/nijel) (PR #175)\n- Fixing some performance bottlenecks from [@deedy5](https://github.com/deedy5) (PR #183)\n\n### Fixed\n- Workaround potential bug in cpython with Zero Width No-Break Space located in Arabic Presentation Forms-B, Unicode 1.1 not acknowledged as space (PR #175)\n- CLI default threshold aligned with the API threshold from [@oleksandr-kuzmenko](https://github.com/oleksandr-kuzmenko) (PR #181)\n\n### Removed\n- Support for Python 3.5 (PR #192)\n\n### Deprecated\n- Use of backport unicodedata from `unicodedata2` as Python is quickly catching up, scheduled for removal in 3.0 (PR #194)\n\n## [2.0.12](https://github.com/Ousret/charset_normalizer/compare/2.0.11...2.0.12) (2022-02-12)\n\n### Fixed\n- ASCII miss-detection on rare cases (PR #170)\n\n## [2.0.11](https://github.com/Ousret/charset_normalizer/compare/2.0.10...2.0.11) (2022-01-30)\n\n### Added\n- Explicit support for Python 3.11 (PR #164)\n\n### Changed\n- The logging behavior have been completely reviewed, now using only TRACE and DEBUG levels (PR #163 #165)\n\n## [2.0.10](https://github.com/Ousret/charset_normalizer/compare/2.0.9...2.0.10) (2022-01-04)\n\n### Fixed\n- Fallback match entries might lead to UnicodeDecodeError for large bytes sequence (PR #154)\n\n### Changed\n- Skipping the language-detection (CD) on ASCII (PR #155)\n\n## [2.0.9](https://github.com/Ousret/charset_normalizer/compare/2.0.8...2.0.9) (2021-12-03)\n\n### Changed\n- Moderating the logging impact (since 2.0.8) for specific environments (PR #147)\n\n### Fixed\n- Wrong logging level applied when setting kwarg `explain` to True (PR #146)\n\n## [2.0.8](https://github.com/Ousret/charset_normalizer/compare/2.0.7...2.0.8) (2021-11-24)\n### Changed\n- Improvement over Vietnamese detection (PR #126)\n- MD improvement on trailing data and long foreign (non-pure latin) data (PR #124)\n- Efficiency improvements in cd/alphabet_languages from [@adbar](https://github.com/adbar) (PR #122)\n- call sum() without an intermediary list following PEP 289 recommendations from [@adbar](https://github.com/adbar) (PR #129)\n- Code style as refactored by Sourcery-AI (PR #131)\n- Minor adjustment on the MD around european words (PR #133)\n- Remove and replace SRTs from assets / tests (PR #139)\n- Initialize the library logger with a `NullHandler` by default from [@nmaynes](https://github.com/nmaynes) (PR #135)\n- Setting kwarg `explain` to True will add provisionally (bounded to function lifespan) a specific stream handler (PR #135)\n\n### Fixed\n- Fix large (misleading) sequence giving UnicodeDecodeError (PR #137)\n- Avoid using too insignificant chunk (PR #137)\n\n### Added\n- Add and expose function `set_logging_handler` to configure a specific StreamHandler from [@nmaynes](https://github.com/nmaynes) (PR #135)\n- Add `CHANGELOG.md` entries, format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) (PR #141)\n\n## [2.0.7](https://github.com/Ousret/charset_normalizer/compare/2.0.6...2.0.7) (2021-10-11)\n### Added\n- Add support for Kazakh (Cyrillic) language detection (PR #109)\n\n### Changed\n- Further, improve inferring the language from a given single-byte code page (PR #112)\n- Vainly trying to leverage PEP263 when PEP3120 is not supported (PR #116)\n- Refactoring for potential performance improvements in loops from [@adbar](https://github.com/adbar) (PR #113)\n- Various detection improvement (MD+CD) (PR #117)\n\n### Removed\n- Remove redundant logging entry about detected language(s) (PR #115)\n\n### Fixed\n- Fix a minor inconsistency between Python 3.5 and other versions regarding language detection (PR #117 #102)\n\n## [2.0.6](https://github.com/Ousret/charset_normalizer/compare/2.0.5...2.0.6) (2021-09-18)\n### Fixed\n- Unforeseen regression with the loss of the backward-compatibility with some older minor of Python 3.5.x (PR #100)\n- Fix CLI crash when using --minimal output in certain cases (PR #103)\n\n### Changed\n- Minor improvement to the detection efficiency (less than 1%) (PR #106 #101)\n\n## [2.0.5](https://github.com/Ousret/charset_normalizer/compare/2.0.4...2.0.5) (2021-09-14)\n### Changed\n- The project now comply with: flake8, mypy, isort and black to ensure a better overall quality (PR #81)\n- The BC-support with v1.x was improved, the old staticmethods are restored (PR #82)\n- The Unicode detection is slightly improved (PR #93)\n- Add syntax sugar \\_\\_bool\\_\\_ for results CharsetMatches list-container (PR #91)\n\n### Removed\n- The project no longer raise warning on tiny content given for detection, will be simply logged as warning instead (PR #92)\n\n### Fixed\n- In some rare case, the chunks extractor could cut in the middle of a multi-byte character and could mislead the mess detection (PR #95)\n- Some rare 'space' characters could trip up the UnprintablePlugin/Mess detection (PR #96)\n- The MANIFEST.in was not exhaustive (PR #78)\n\n## [2.0.4](https://github.com/Ousret/charset_normalizer/compare/2.0.3...2.0.4) (2021-07-30)\n### Fixed\n- The CLI no longer raise an unexpected exception when no encoding has been found (PR #70)\n- Fix accessing the 'alphabets' property when the payload contains surrogate characters (PR #68)\n- The logger could mislead (explain=True) on detected languages and the impact of one MBCS match (PR #72)\n- Submatch factoring could be wrong in rare edge cases (PR #72)\n- Multiple files given to the CLI were ignored when publishing results to STDOUT. (After the first path) (PR #72)\n- Fix line endings from CRLF to LF for certain project files (PR #67)\n\n### Changed\n- Adjust the MD to lower the sensitivity, thus improving the global detection reliability (PR #69 #76)\n- Allow fallback on specified encoding if any (PR #71)\n\n## [2.0.3](https://github.com/Ousret/charset_normalizer/compare/2.0.2...2.0.3) (2021-07-16)\n### Changed\n- Part of the detection mechanism has been improved to be less sensitive, resulting in more accurate detection results. Especially ASCII. (PR #63)\n- According to the community wishes, the detection will fall back on ASCII or UTF-8 in a last-resort case. (PR #64)\n\n## [2.0.2](https://github.com/Ousret/charset_normalizer/compare/2.0.1...2.0.2) (2021-07-15)\n### Fixed\n- Empty/Too small JSON payload miss-detection fixed. Report from [@tseaver](https://github.com/tseaver) (PR #59)\n\n### Changed\n- Don't inject unicodedata2 into sys.modules from [@akx](https://github.com/akx) (PR #57)\n\n## [2.0.1](https://github.com/Ousret/charset_normalizer/compare/2.0.0...2.0.1) (2021-07-13)\n### Fixed\n- Make it work where there isn't a filesystem available, dropping assets frequencies.json. Report from [@sethmlarson](https://github.com/sethmlarson). (PR #55)\n- Using explain=False permanently disable the verbose output in the current runtime (PR #47)\n- One log entry (language target preemptive) was not show in logs when using explain=True (PR #47)\n- Fix undesired exception (ValueError) on getitem of instance CharsetMatches (PR #52)\n\n### Changed\n- Public function normalize default args values were not aligned with from_bytes (PR #53)\n\n### Added\n- You may now use charset aliases in cp_isolation and cp_exclusion arguments (PR #47)\n\n## [2.0.0](https://github.com/Ousret/charset_normalizer/compare/1.4.1...2.0.0) (2021-07-02)\n### Changed\n- 4x to 5 times faster than the previous 1.4.0 release. At least 2x faster than Chardet.\n- Accent has been made on UTF-8 detection, should perform rather instantaneous.\n- The backward compatibility with Chardet has been greatly improved. The legacy detect function returns an identical charset name whenever possible.\n- The detection mechanism has been slightly improved, now Turkish content is detected correctly (most of the time)\n- The program has been rewritten to ease the readability and maintainability. (+Using static typing)+\n- utf_7 detection has been reinstated.\n\n### Removed\n- This package no longer require anything when used with Python 3.5 (Dropped cached_property)\n- Removed support for these languages: Catalan, Esperanto, Kazakh, Baque, Volapük, Azeri, Galician, Nynorsk, Macedonian, and Serbocroatian.\n- The exception hook on UnicodeDecodeError has been removed.\n\n### Deprecated\n- Methods coherence_non_latin, w_counter, chaos_secondary_pass of the class CharsetMatch are now deprecated and scheduled for removal in v3.0\n\n### Fixed\n- The CLI output used the relative path of the file(s). Should be absolute.\n\n## [1.4.1](https://github.com/Ousret/charset_normalizer/compare/1.4.0...1.4.1) (2021-05-28)\n### Fixed\n- Logger configuration/usage no longer conflict with others (PR #44)\n\n## [1.4.0](https://github.com/Ousret/charset_normalizer/compare/1.3.9...1.4.0) (2021-05-21)\n### Removed\n- Using standard logging instead of using the package loguru.\n- Dropping nose test framework in favor of the maintained pytest.\n- Choose to not use dragonmapper package to help with gibberish Chinese/CJK text.\n- Require cached_property only for Python 3.5 due to constraint. Dropping for every other interpreter version.\n- Stop support for UTF-7 that does not contain a SIG.\n- Dropping PrettyTable, replaced with pure JSON output in CLI.\n\n### Fixed\n- BOM marker in a CharsetNormalizerMatch instance could be False in rare cases even if obviously present. Due to the sub-match factoring process.\n- Not searching properly for the BOM when trying utf32/16 parent codec.\n\n### Changed\n- Improving the package final size by compressing frequencies.json.\n- Huge improvement over the larges payload.\n\n### Added\n- CLI now produces JSON consumable output.\n- Return ASCII if given sequences fit. Given reasonable confidence.\n\n## [1.3.9](https://github.com/Ousret/charset_normalizer/compare/1.3.8...1.3.9) (2021-05-13)\n\n### Fixed\n- In some very rare cases, you may end up getting encode/decode errors due to a bad bytes payload (PR #40)\n\n## [1.3.8](https://github.com/Ousret/charset_normalizer/compare/1.3.7...1.3.8) (2021-05-12)\n\n### Fixed\n- Empty given payload for detection may cause an exception if trying to access the `alphabets` property. (PR #39)\n\n## [1.3.7](https://github.com/Ousret/charset_normalizer/compare/1.3.6...1.3.7) (2021-05-12)\n\n### Fixed\n- The legacy detect function should return UTF-8-SIG if sig is present in the payload. (PR #38)\n\n## [1.3.6](https://github.com/Ousret/charset_normalizer/compare/1.3.5...1.3.6) (2021-02-09)\n\n### Changed\n- Amend the previous release to allow prettytable 2.0 (PR #35)\n\n## [1.3.5](https://github.com/Ousret/charset_normalizer/compare/1.3.4...1.3.5) (2021-02-08)\n\n### Fixed\n- Fix error while using the package with a python pre-release interpreter (PR #33)\n\n### Changed\n- Dependencies refactoring, constraints revised.\n\n### Added\n- Add python 3.9 and 3.10 to the supported interpreters\n\nMIT License\n\nCopyright (c) 2025 TAHRI Ahmed R.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
        "description_content_type": "text/markdown",
        "keywords": [
          "encoding",
          "charset",
          "charset-detector",
          "detector",
          "normalization",
          "unicode",
          "chardet",
          "detect"
        ],
        "author_email": "\"Ahmed R. TAHRI\" <tahri.ahmed@proton.me>",
        "maintainer_email": "\"Ahmed R. TAHRI\" <tahri.ahmed@proton.me>",
        "license": "MIT",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.14",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Text Processing :: Linguistic",
          "Topic :: Utilities",
          "Typing :: Typed"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Changelog, https://github.com/jawah/charset_normalizer/blob/master/CHANGELOG.md",
          "Documentation, https://charset-normalizer.readthedocs.io/",
          "Code, https://github.com/jawah/charset_normalizer",
          "Issue tracker, https://github.com/jawah/charset_normalizer/issues"
        ],
        "provides_extra": [
          "unicode-backport"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/charset_normalizer-3.4.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "modulegraph",
        "version": "0.19.6",
        "platform": [
          "any"
        ],
        "summary": "Python module dependency analysis tool",
        "description": "modulegraph\n===========\n\nmodulegraph determines a dependency graph between Python modules primarily\nby bytecode analysis for import statements.\n\nmodulegraph uses similar methods to modulefinder from the standard library,\nbut uses a more flexible internal representation, has more extensive\nknowledge of special cases, and is extensible.\n\nCI Status\n---------\n\n.. image:: https://github.com/ronaldoussoren/modulegraph/workflows/Lint/badge.svg\n.. image:: https://github.com/ronaldoussoren/modulegraph/workflows/Test/badge.svg\n\nProject links\n-------------\n\n* `Documentation <https://modulegraph.readthedocs.io/en/latest/>`_\n\n* `Issue Tracker <https://github.com/ronaldoussoren/modulegraph/issues>`_\n\n* `Repository <https://github.com/ronaldoussoren/modulegraph/>`_\n\n\nRelease history\n===============\n\nVersion 0.19.6\n--------------\n\n* Actually introduce Python 3.12 support\n\n  Previous support was tested on an installation that previously\n  had an early alpha installed without cleaning up, resulting in\n  failing to remove all use of the ``imp`` module.\n\n0.19.5\n------\n\n* Sigh.. Actually fix 2.7 support\n\n  (code cleanup broke the PR in 0.19.4)\n\n0.19.4\n------\n\n* Fix broken python 2.7 support\n\n  PR by Josua Root\n\n* Initial support for Python 3.12\n\n  The changes to support Python 3.12 are a bit rough,\n  tests pass but I'm not 100% convinced the changes\n  are correct.\n\n0.19.3\n------\n\n* Fix incompatibility with Python 3.11\n\n0.19.2\n------\n\n* Fix project links in PyPI sidebar\n\n\n0.19.1\n------\n\n* Explictly mention python 3.10 support in package metadata\n\n0.19\n----\n\n* Fix incorrect path when package ``__init__`` is an extension.\n\n0.18\n----\n\n* Avoid exception when one of the items on \"packages\" is not a package\n  (modulegraph.find_modules.find_needed_modules)\n\n* #45: ``Modulegraph.foldReferences()`` called the wrong method\n\n  Reported by Anthony Foglia.\n\n0.17\n----\n\n* The .pyc format changed a little in Python 3.7\n\n0.16\n----\n\nFeatures:\n\n* Add LICENSE file to distribution\n\n* Don't rely on pkg_resources to calculate package version\n\n* Replace use of ``optparse`` by ``argparse`` as the former is deprecated\n\n  Patch by htgoebel\n\n* Attempt to reduce the maximum recursion needed to create the ModuleGraph\n\n* Don't include the file type in the result from ``zipio.getmode``\n\n* Fix mismatched indents/dedents in ModuleGraph debug output\n\n  Patch by codewarrior0\n\nBug fixes:\n\n* Testsuite now passes on Windows (testd through appveyor)\n\n  This only required changes to remove platform dependencies\n  from the test suite.\n\n0.15\n----\n\nFeatures:\n\n* Issue #39: Traceback with for a syntax error when compiling async function\n\n  On Python 3.5 some (invalid) async function definitions caused a modulegraph\n  traceback, instead of adding \"InvalidSourceModule\" nodes to the graph.\n\n* Issue #40: The graph now contains nodes of type \"InvalidRelativeImport\" for\n  attempts to use relative imports that walk outside of a toplevel\n  package.\n\n* Module ``modulegraph.find_modules`` can no longer be used a script,\n  use ``python -m modulegraph`` instead.\n\nBugfixes:\n\n* Issue 38: Dot output broken in Python 3\n\n  Patch by user elnuno on bitbucket.\n\n* Issue 36: Make sure test suite works on systems other than macOS\n\n  Patch by Hartmut Goebel\n\n* Add support for \"async def\" to the AST scanner, needed to\n  properly recognize imports in async function definitions.\n\n0.14\n----\n\nBugfixes:\n\n* #33: Error scanning bytecode on python 3.4 or later\n\n  The code using ``dis.get_instructions`` to scan the bytecode\n  on Python 3.4 or later didn't work properly causing problems\n  when trying to scan bytecode.\n\n0.13\n----\n\n* Various documentation fixes by Thomas Kluyver.\n\n* Fix incompatibility with recent versions of setuptools\n\n  See also `issue #206 in py2apps tracker <https://github.com/ronaldoussoren/py2app/issues/206/py2app-doesnt-work-with-release-433-of>`_ for more information.\n\n* Python 3: Ignore BOM at start of input files when compiling them.\n\n  This matches the behavior of CPython, and avoids hard to diagnose problems.\n  See also `issue #178 in the py2app tracker <https://github.com/ronaldoussoren/py2app/issues/178/python-3-syntaxerror-invalid-character-in>`_\n\n* Python 3.6 introduced a new bytecode format (wordcode), adjust the\n  bytecode scanner for that.\n\n\n0.12.1\n------\n\n* Issue #25: Complex python files could cause an \"maximum recursion depth exceeded\"\n  exception due to using stack-based recursion to walk the module AST.\n\n\n0.12\n----\n\n* Added 'modulegraph.modulegraph.InvalidSourceModule'. This graph node is\n  used for Python source modules that cannot be compiled (for example because\n  they contain syntax errors).\n\n  This is primarily useful for being able to create a graph for packages\n  that have python 2.x or python 3.x compatibility in separate modules that\n  contain code that isn't valid in the \"other\" python version.\n\n* Added 'modulegraph.modulegraph.InvalidCompiledModule'. This graph node\n  is used for Python bytecode modules that cannot be loaded.\n\n* Added 'modulegraph.modulegraph.NamespacePackage'.\n\n  Patch by bitbucket user htgoebel.\n\n* No longer add a MissingModule node to the graph for 'collections.defaultdict'\n  when using 'from collections import defaultdict' ('collections.defaultdict'\n  is an attribute of 'collections', not a submodule).\n\n* Fixed typo in ModuleGraph.getReferences()\n\n* Added ModuleGraph.getReferers(tonode). This methods yields the\n  nodes that are referencing *tonode* (the reverse of getReferences)\n\n* The graph will no longer contain MissingModule nodes when using 'from ... import name' to\n  import a global variable in a python module.\n\n  There will still be MissingModule nodes for global variables in C extentions, and\n  for 'from missing import name' when 'missing' is itself a MissingModule.\n\n* Issue #18: Don't assume that a PEP 302 loader object has a ``path`` attribute. That\n  attribute is not documented and is not always present.\n\n0.11.2\n------\n\n*\n\n0.11.1\n------\n\n* Issue #145: Don't exclude the platform specific 'path' modules (like ntpath)\n\n0.11\n----\n\nThis is a feature release\n\nFeatures\n........\n\n* Hardcode knowlegde about the compatibility aliases in the email\n  module (for python 2.5 upto 3.0).\n\n  This makes it possible to remove a heavy-handed recipe from py2app.\n\n* Added ``modegraph.zipio.getmode`` to fetch the Unix file mode\n  for a file.\n\n* Added some handy methods to ``modulegraph.modulegraph.ModuleGraph``.\n\n0.10.5\n------\n\nThis is a bugfix release\n\n* Don't look at the file extension to determine the file type\n  in modulegraph.find_modules.parse_mf_results, but use the\n  class of the item.\n\n* Issue #13: Improved handing of bad relative imports\n  (\"from .foo import bar\"), these tended to raise confusing errors and\n  are now handled like any other failed import.\n\n0.10.4\n------\n\nThis is a bugfix release\n\n* There were no 'classifiers' in the package metadata due to a bug\n  in setup.py.\n\n0.10.3\n------\n\nThis is a bugfix release\n\nBugfixes\n........\n\n* ``modulegraph.find.modules.parse_mf_results`` failed when the main script of\n  a py2app module didn't have a file name ending in '.py'.\n\n0.10.2\n------\n\nThis is a bugfix release\n\nBugfixes\n........\n\n* Issue #12: modulegraph would sometimes find the wrong package *__init__*\n  module due to using the wrong search method. One easy way to reproduce the\n  problem was to have a toplevel module named *__init__*.\n\n  Reported by Kentzo.\n\n0.10.1\n------\n\nThis is a bugfix release\n\nBugfixes\n........\n\n* Issue #11: creating xrefs and dotty graphs from modulegraphs (the --xref\n  and --graph options of py2app) didn't work with python 3 due to use of\n  APIs that aren't available in that version of python.\n\n  Reported by Andrew Barnert.\n\n\n0.10\n----\n\nThis is a minor feature release\n\nFeatures\n........\n\n* ``modulegraph.find_modules.find_needed_modules`` claimed to automaticly\n  include subpackages for the \"packages\" argument as well, but that code\n  didn't work at all.\n\n* Issue #9: The modulegraph script is deprecated, use\n  \"python -mmodulegraph\" instead.\n\n* Issue #10: Ensure that the result of \"zipio.open\" can be used\n  in a with statement (that is, ``with zipio.open(...) as fp``.\n\n* No longer use \"2to3\" to support Python 3.\n\n  Because of this modulegraph now supports Python 2.6\n  and later.\n\n* Slightly improved HTML output, which makes it easier\n  to manipulate the generated HTML using JavaScript.\n\n  Patch by anatoly techtonik.\n\n* Ensure modulegraph works with changes introduced after\n  Python 3.3b1.\n\n* Implement support for PEP 420 (\"Implicit namespace packages\")\n  in Python 3.3.\n\n* ``modulegraph.util.imp_walk`` is deprecated and will be\n  removed in the next release of this package.\n\nBugfixes\n........\n\n* The module graph was incomplete, and generated incorrect warnings\n  along the way, when a subpackage contained import statements for\n  submodules.\n\n  An example of this is ``sqlalchemy.util``, the ``__init__.py`` file\n  for this package contains imports of modules in that modules using\n  the classic relative import syntax (that is ``import compat`` to\n  import ``sqlalchemy.util.compat``). Until this release modulegraph\n  searched the wrong path to locate these modules (and hence failed\n  to find them).\n\n\n0.9.2\n-----\n\nThis is a bugfix release\n\nBugfixes\n........\n\n* The 'packages' option to modulegraph.find_modules.find_modules ignored\n  the search path argument but always used the default search path.\n\n* The 'imp_find_modules' function in modulegraph.util has an argument 'path',\n  this was a string in previous release and can now also be a sequence.\n\n* Don't crash when a module on the 'includes' list doesn't exist, but warn\n  just like for missing 'packages' (modulegraph.find_modules.find_modules)\n\n0.9.1\n-----\n\nThis is a bugfix release\n\nBug fixes\n.........\n\n- Fixed the name of nodes imports in packages where the first element of\n  a dotted name can be found but the rest cannot. This used to create\n  a MissingModule node for the dotted name in the global namespace instead\n  of relative to the package.\n\n  That is, given a package \"pkg\" with submodule \"sub\" if the \"__init__.py\"\n  of \"pkg\" contains \"import sub.nomod\" we now create a MissingModule node\n  for \"pkg.sub.nomod\" instead of \"sub.nomod\".\n\n  This fixes an issue with including the crcmod package in application\n  bundles, first reported on the pythonmac-sig mailinglist by\n  Brendan Simon.\n\n0.9\n---\n\nThis is a minor feature release\n\n\nFeatures:\n\n- Documentation is now generated using `sphinx <http://pypi.python.org/pypi/sphinx>`_\n  and can be viewed at <http://packages.python.org/modulegraph>.\n\n  The documention is very rough at this moment and in need of reorganisation and\n  language cleanup. I've basiclly writting the current version by reading the code\n  and documenting what it does, the order in which classes and methods are document\n  is therefore not necessarily the most useful.\n\n- The repository has moved to bitbucket\n\n- Renamed ``modulegraph.modulegraph.AddPackagePath`` to ``addPackagePath``,\n  likewise ``ReplacePackage`` is now ``replacePackage``. The old name is still\n  available, but is deprecated and will be removed before the 1.0 release.\n\n- ``modulegraph.modulegraph`` contains two node types that are unused and\n  have unclear semantics: ``FlatPackage`` and ``ArchiveModule``. These node\n  types are deprecated and will be removed before 1.0 is released.\n\n- Added a simple commandline tool (``modulegraph``) that will print information\n  about the dependency graph of a script.\n\n- Added a module (``zipio``) for dealing with paths that may refer to entries\n  inside zipfiles (such as source paths referring to modules in zipped eggfiles).\n\n  With this addition ``modulegraph.modulegraph.os_listdir`` is deprecated and\n  it will be removed before the 1.0 release.\n\nBug fixes:\n\n- The ``__cmp__`` method of a Node no longer causes an exception\n  when the compared-to object is not a Node. Patch by Ivan Kozik.\n\n- Issue #1: The initialiser for ``modulegraph.ModuleGraph`` caused an exception\n  when an entry on the path (``sys.path``) doesn't actually exist.\n\n  Fix by \"skurylo\", testcase by Ronald.\n\n- The code no longer worked with python 2.5, this release fixes that.\n\n- Due to the switch to mercurial setuptools will no longer include\n  all required files. Fixed by adding a MANIFEST.in file\n\n- The method for printing a ``.dot`` representation of a ``ModuleGraph``\n  works again.\n\n\n0.8.1\n-----\n\nThis is a minor feature release\n\nFeatures:\n\n- ``from __future__ import absolute_import`` is now supported\n\n- Relative imports (``from . import module``) are now supported\n\n- Add support for namespace packages when those are installed\n  using option ``--single-version-externally-managed`` (part\n  of setuptools/distribute)\n\n0.8\n---\n\nThis is a minor feature release\n\nFeatures:\n\n- Initial support for Python 3.x\n\n- It is now possible to run the test suite\n  using ``python setup.py test``.\n\n  (The actual test suite is still fairly minimal though)\n",
        "description_content_type": "text/x-rst; charset=UTF-8",
        "keywords": [
          "import",
          "",
          "dependencies"
        ],
        "home_page": "http://github.com/ronaldoussoren/modulegraph",
        "download_url": "http://pypi.python.org/pypi/modulegraph",
        "author": "Ronald Oussoren",
        "author_email": "ronaldoussoren@mac.com",
        "maintainer": "Ronald Oussoren",
        "maintainer_email": "ronaldoussoren@mac.com",
        "license": "MIT",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Software Development :: Build Tools"
        ],
        "requires_dist": [
          "altgraph >=0.15",
          "setuptools"
        ],
        "project_url": [
          "Documentation, https://modulegraph.readthedocs.io/en/latest/",
          "Issue tracker, https://github.com/ronaldoussoren/modulegraph/issues",
          "Repository, https://github.com/ronaldoussoren/modulegraph"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/modulegraph-0.19.6.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "altgraph",
        "version": "0.17.4",
        "platform": [
          "any"
        ],
        "summary": "Python graph (network) package",
        "description": "altgraph is a fork of graphlib: a graph (network) package for constructing\ngraphs, BFS and DFS traversals, topological sort, shortest paths, etc. with\ngraphviz output.\n\naltgraph includes some additional usage of Python 2.6+ features and\nenhancements related to modulegraph and macholib.\n\nProject links\n-------------\n\n* `Documentation <https://altgraph.readthedocs.io/en/latest/>`_\n\n* `Issue Tracker <https://github.com/ronaldoussoren/altgraph/issues>`_\n\n* `Repository <https://github.com/ronaldoussoren/altgraph/>`_\n\n\nRelease history\n===============\n\n0.17.3\n------\n\n* Update classifiers for Python 3.11\n\n0.17.2\n------\n\n* Change in setup.py to fix the sidebar links on PyPI\n\n0.17.1\n------\n\n* Explicitly mark Python 3.10 as supported in wheel metadata.\n\n0.17\n----\n\n* Explicitly mark Python 3.8 as supported in wheel metadata.\n\n* Migrate from Bitbucket to GitHub\n\n* Run black on the entire repository\n\n0.16.1\n------\n\n* Explicitly mark Python 3.7 as supported in wheel metadata.\n\n0.16\n----\n\n* Add LICENSE file\n\n0.15\n----\n\n* ``ObjectGraph.get_edges``, ``ObjectGraph.getEdgeData`` and ``ObjectGraph.updateEdgeData``\n  accept *None* as the node to get and treat this as an alias for *self* (as other\n  methods already did).\n\n0.14\n----\n\n- Issue #7: Remove use of ``iteritems`` in altgraph.GraphAlgo code\n\n0.13\n----\n\n- Issue #4: Graph._bfs_subgraph and back_bfs_subgraph return subgraphs with reversed edges\n\n  Fix by \"pombredanne\" on bitbucket.\n\n\n0.12\n----\n\n- Added ``ObjectGraph.edgeData`` to retrieve the edge data\n  from a specific edge.\n\n- Added ``AltGraph.update_edge_data`` and ``ObjectGraph.updateEdgeData``\n  to update the data associated with a graph edge.\n\n0.11\n----\n\n- Stabilize the order of elements in dot file exports,\n  patch from bitbucket user 'pombredanne'.\n\n- Tweak setup.py file to remove dependency on distribute (but\n  keep the dependency on setuptools)\n\n\n0.10.2\n------\n\n- There where no classifiers in the package metadata due to a bug\n  in setup.py\n\n0.10.1\n------\n\nThis is a bugfix release\n\nBug fixes:\n\n- Issue #3: The source archive contains a README.txt\n  while the setup file refers to ReadMe.txt.\n\n  This is caused by a misfeature in distutils, as a\n  workaround I've renamed ReadMe.txt to README.txt\n  in the source tree and setup file.\n\n\n0.10\n-----\n\nThis is a minor feature release\n\nFeatures:\n\n- Do not use \"2to3\" to support Python 3.\n\n  As a side effect of this altgraph now supports\n  Python 2.6 and later, and no longer supports\n  earlier releases of Python.\n\n- The order of attributes in the Dot output\n  is now always alphabetical.\n\n  With this change the output will be consistent\n  between runs and Python versions.\n\n0.9\n---\n\nThis is a minor bugfix release\n\nFeatures:\n\n- Added ``altgraph.ObjectGraph.ObjectGraph.nodes``, a method\n  yielding all nodes in an object graph.\n\nBugfixes:\n\n- The 0.8 release didn't work with py2app when using\n  python 3.x.\n\n\n0.8\n-----\n\nThis is a minor feature release. The major new feature\nis a extensive set of unittests, which explains almost\nall other changes in this release.\n\nBugfixes:\n\n- Installing failed with Python 2.5 due to using a distutils\n  class that isn't available in that version of Python\n  (issue #1 on the issue tracker)\n\n- ``altgraph.GraphStat.degree_dist`` now actually works\n\n- ``altgraph.Graph.add_edge(a, b, create_nodes=False)`` will\n  no longer create the edge when one of the nodes doesn't\n  exist.\n\n- ``altgraph.Graph.forw_topo_sort`` failed for some sparse graphs.\n\n- ``altgraph.Graph.back_topo_sort`` was completely broken in\n  previous releases.\n\n- ``altgraph.Graph.forw_bfs_subgraph`` now actually works.\n\n- ``altgraph.Graph.back_bfs_subgraph`` now actually works.\n\n- ``altgraph.Graph.iterdfs`` now returns the correct result\n  when the ``forward`` argument is ``False``.\n\n- ``altgraph.Graph.iterdata`` now returns the correct result\n  when the ``forward`` argument is ``False``.\n\n\nFeatures:\n\n- The ``altgraph.Graph`` constructor now accepts an argument\n  that contains 2- and 3-tuples instead of requireing that\n  all items have the same size. The (optional) argument can now\n  also be any iterator.\n\n- ``altgraph.Graph.Graph.add_node`` has no effect when you\n  add a hidden node.\n\n- The private method ``altgraph.Graph._bfs`` is no longer\n  present.\n\n- The private method ``altgraph.Graph._dfs`` is no longer\n  present.\n\n- ``altgraph.ObjectGraph`` now has a ``__contains__`` methods,\n  which means you can use the ``in`` operator to check if a\n  node is part of a graph.\n\n- ``altgraph.GraphUtil.generate_random_graph`` will raise\n  ``GraphError`` instead of looping forever when it is\n  impossible to create the requested graph.\n\n- ``altgraph.Dot.edge_style`` raises ``GraphError`` when\n  one of the nodes is not present in the graph. The method\n  silently added the tail in the past, but without ensuring\n  a consistent graph state.\n\n- ``altgraph.Dot.save_img`` now works when the mode is\n  ``\"neato\"``.\n\n0.7.2\n-----\n\nThis is a minor bugfix release\n\nBugfixes:\n\n- distutils didn't include the documentation subtree\n\n0.7.1\n-----\n\nThis is a minor feature release\n\nFeatures:\n\n- Documentation is now generated using `sphinx <http://pypi.python.org/pypi/sphinx>`_\n  and can be viewed at <http://packages.python.org/altgraph>.\n\n- The repository has moved to bitbucket\n\n- ``altgraph.GraphStat.avg_hops`` is no longer present, the function had no\n  implementation and no specified behaviour.\n\n- the module ``altgraph.compat`` is gone, which means altgraph will no\n  longer work with Python 2.3.\n\n\n0.7.0\n-----\n\nThis is a minor feature release.\n\nFeatures:\n\n- Support for Python 3\n\n- It is now possible to run tests using 'python setup.py test'\n\n  (The actual testsuite is still very minimal though)\n",
        "description_content_type": "text/x-rst; charset=UTF-8",
        "keywords": [
          "graph"
        ],
        "home_page": "https://altgraph.readthedocs.io",
        "download_url": "http://pypi.python.org/pypi/altgraph",
        "author": "Ronald Oussoren",
        "author_email": "ronaldoussoren@mac.com",
        "maintainer": "Ronald Oussoren",
        "maintainer_email": "ronaldoussoren@mac.com",
        "license": "MIT",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Scientific/Engineering :: Visualization"
        ],
        "project_url": [
          "Documentation, https://altgraph.readthedocs.io/en/latest/",
          "Issue tracker, https://github.com/ronaldoussoren/altgraph/issues",
          "Repository, https://github.com/ronaldoussoren/altgraph"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/altgraph-0.17.4.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "py2app",
        "version": "0.28.8",
        "platform": [
          "MacOS X"
        ],
        "summary": "Create standalone Mac OS X applications with Python",
        "description": "\npy2app is a Python setuptools command which will allow\nyou to make standalone Mac OS X application bundles\nand plugins from Python scripts.\n\npy2app is similar in purpose and design to py2exe for\nWindows.\n\nNOTE: py2app must be used on macOS to build applications,\nit cannot create Mac applications on other platforms.\n\nProject links\n-------------\n\n* `Documentation <https://py2app.readthedocs.io/en/latest/>`_\n\n* `Issue Tracker <https://github.com/ronaldoussoren/py2app/issues>`_\n\n* `Repository <https://github.com/ronaldoussoren/py2app/>`_\n\nRelease history\n===============\n\npy2app 0.28.8\n-------------\n\n* #525: Fix breakage with setuptools 70.\n\n* Add support for python 3.13\n\npy2app 0.28.7\n-------------\n\n* Introduce support for Python 3.12\n\npy2app 0.28.6\n-------------\n\n* Fix support for Python 2.7\n\n  These are best-effort changes, I no longer have a setup where I\n  can perform a good test run for Python 2.7.\n\n\npy2app 0.28.5\n-------------\n\n* #476: Update black recipe\n\n  The black recipe no longer worked with recent versions of black\n  due to relying on a metadata file from the \"egg\" spec that's not\n  included by black's current build tool.\n\n  The recipe now scans the python code that's next to the mypyc\n  compiled extension modules for dependencies and uses that to update\n  the dependency graph. This should ensure that new dependencies of\n  black will be automaticly detected in the future.\n\n* Update wheel dependencies\n\npy2app 0.28.4\n-------------\n\n* Fix incompatibility with Python 3.11\n\npy2app 0.28.3\n-------------\n\n* #453: Fix crash in py2applet when specifying a directory to\n  include in the application bundle.\n\npy2app 0.28.2\n-------------\n\n* Fix incompatibility with recent setuptools\n\npy2app 0.28.1\n-------------\n\n* #448: Fix typo in qt6 recipe\n\n* #444: Fix issue where the standard output and standard error streams\n  are set to non-blocking when using py2app.\n\n  For some reason the \"ibtool\" command (part of Xcode) sets these streams\n  to non-blocking when compiling NIB files. I've added a context manager that\n  resets the non-blocking status of these streams.\n\n* PR #446: Fix Qt5 recipe for newer versions of PyQt5\n\n  PR by kangi.\n\n* #447: Fix error when using ``py2applet --help``\n\n  Bug was introduced in the fix for #414\n\n\npy2app 0.28\n-----------\n\n.. note::\n\n   This is the last version of py2app with compatibility with\n   Python 2.7. Future versions will require Python 3.6 or later.\n\n* PR #410: Fix typo in NamedTemporyFile call\n\n  PR by MAKOMO\n\n* #414 Workaround for autodiscovery in setuptools 61.0\n\n  Setuptools 61.0 introduces autodiscovery of distribution\n  attributes, and that broke py2app. This version introduces\n  a ``setuptools.finalize_distribution_options`` entrypoint\n  in py2app that will set the distributions's *name* and\n  *py_modules* attributes in a way that is compatible with\n  the main code of py2app when they are not yet set (before\n  autodiscovery kicks in).\n\n  In older versions of py2app buildin an app can fail in two\n  ways with setuptools 61.0 or later:\n\n  - The name of the generated application is not based on\n    the script name, but some other value.\n\n  - Calling ``python setup.py py2app`` results in an error\n    mentioning ``Multiple top-level modules discovered``.\n\n\n* PR #418: Add recipe for black\n\n  PR by mrclary\n\n* #417: Also include package dist-info for editable installs\n\n* The qt5 and qt6 recipes used dodge logic to detect\n  if the Qt library itself is inside the python package,\n  resulting in duplicate copies of Qt.\n\n* #406: Fix incompatibility with python 2.7\n\n  py2app 0.24 accidently broke compatibility with Python 2.7, and\n  this release fixes this.\n\n  This is the last release with Python 2.7 support, the next\n  release will contain package metadata that ensures it can\n  only be installed on Python 3.\n\n* #413: Find dist-info in included pythonXX.zip\n\n  By default the ``working_set`` of pkg_resources does not contain\n  distribution information from packages included in zip files, such\n  as the zipped-up stdlib + site-pakckages in py2app bundles.\n\n  Add some monkey patching to apps using ``pkg_resources`` to fix this.\n\n* Fix hard crash in \"rtree\" recipe when the package contents doesn't\n  match the recipe expectations.\n\n* #408: Add definition of ``site.PREFIXES``\n\n* #412: Fix incompatibility with setuptools 60.8.1\n\n  The setuptools recipe did not recoginize all vendored dependencies\n  in ``pkg_resources`` and that breaks app bundles that use ``pkg_resoures``.\n\n* PR #388: Add builtin definitions for 'quit' and 'exit' in site.py\n\n  PR by mcclary\n\n* PR #388: Set \"ENABLE_USER_SITE=False\" in site.py\n\n  PR by mcclary\n\n* PR #396: Update pygame recipe to remove missing icon\n\n  PR by glyph\n\npy2app 0.27\n-----------\n\n* #377: The qt5 and qt6 recipes caused a py2app crash when\n  the PyQt5 or PyQt6 is not installed.\n\n* #401: Fix incompatibility with setuptools 60.7 and later\n\n* #391: Drop usage of tempfile.mktemp\n\n* #387: Add ``site.ENABLE_USER_SITE`` in the site.py file\n  for applications (value is always ``False``).\n\n\npy2app 0.26.1\n-------------\n\n* #374: Actually ship the \"old\" stub executables introduced in version 0.26\n\n\npy2app 0.26\n-----------\n\n* Stub executables were recompiled on macOS 11\n\n  This means support for light mode/dark mode should now work out of the\n  box.\n\n  The old stub executables are still used when detecting that Tkinter\n  is used with an old build of Tk.\n\n* #1: Include \".egg-info\" and \".dist-info\" information in the bundled application\n\n  This fixes any python package that uses ``pkg_resources`` to look for\n  specific distributions.\n\n* ``py2app.filters.not_stdlib_filter`` now knows about Python's \"venv\"\n\n* #368: Add recipe \"detect_dunder_file\"\n\n  This recipe will ensure that a Python package is stored outside\n  of site-packages.zip when a module in that package uses the\n  ``__file__`` variable.\n\n  This variable is most commonly used to load resources stored in\n  the package (instead of the newer ``importlib.resources`` and ``pkg_resources``\n  libraries).\n\n* #339: Add recipe for pydantic\n\n  The recipe is needed because pydantic uses Cython to compile\n  all sources (including the package ``__init__``) and therefore\n  hides imports from the dependency analyzer.\n\n* #338: Add \"imageio_ffmpeg\" to autopackages\n\n* PR367: Add recipes for pandas, pylsp, and zmq\n\n* PR367: Add docutils and pylint to autopackages\n\n  PR by Ryan Clary (mrclary on GitHub)\n\n* #344: Invocation of codesign on the whole bundle sometimes fails\n\n  Py2app will now try this a number of times before giving up. This\n  is at best a workaround for and doesn't completely fix the problem.\n\n* #370: py2app now works with Python 3.10\n\n  Python 3.10 no longer exports a (private) symbol used by the py2app\n  stub executable. Switched to a public API to accomplish the same task where\n  available.\n\n* #110: Add recipe for SQLAlchemy\n\n  The recipe includes all dialects and connectors, including implicit\n  dependencies, because SQLAlchemy uses ``__import__`` to load dependencies.\n\n* #328: Add recipe for gcloud\n\n* #195: Add ``USER_BASE``, ``getuserbase()`` and ``getusersitepackages()``  to\n  py2app's version of ``site.py``.\n\n* #184: Add recipe for 'ssl'\n\n  This recipe is only used for Python 3.4 or later and ensures that the\n  CA bundle used by Python's ssl module is included in the app bundle and OpenSSL\n  is configured to look for that bundle in the application bundle.\n\n* #371: change default error message on launch problems\n\n  The default error message shown when the application cannot be launched is now\n  slightly more useful and refers the\n  `py2app debug page <https://py2app.readthedocs.io/en/latest/debugging.html>`_.\n\n* #345, #169: Adjust qt5 and qt6 recipes for non-PyPI installations\n\n  The qt5 and qt6 recipes now should work when the Qt installation prefix\n  is outside of the PyQt package, for example when PyQt was installed through\n  homebrew.\n\n  I've tested this for PyQt5 and made the same change to the PyQt6 recipe, although\n  I haven't tested that change.\n\npy2app 0.25\n-----------\n\n* #358: Add recipe for multiprocessing\n\n* PR363: Add recipe for platformdirs\n\n  PR by Ryan Clary (mrclary on GitHub)\n\n* PR353: Add recipe for sphinx\n\n  PR by Ryan Clary (mrclary on GitHub)\n\n* PR352: Fix for using ipython\n\n  PR by Ryan Clary (mrclary on GitHub)\n\n* PR351: Tweak the matplotlib recipe\n\n  PR by Ryan Clary (mrclary on GitHub)\n\n* PR348: Fix for checking for dead symlinks links in py2app\n\n  PR by Oliver Cordes (ocordes on GitHub)\n\n* #354: Fix buggy \"autopackages\" and \"automissing\" recipes\n\n* #350: Add sentencepiece to the autopackages list\n\n* #359: Add recipe for PyQt6\n\n* #349: Add recipe for OpenCV (opencv-python, ``import cv2``)\n\n* PR365: Add RTree recipe\n\n  PR by Ryan Clary (mrclary on GitHub)\n\npy2app 0.24\n-----------\n\n* Consolidate recipes that just include a package\n  as is into a single recipe to reduce code complexity.\n\n* Consolidate recipes that just mark imports as expected\n  missing into a single recipe to reduce code complexity.\n\n* #334: Include binary stubs for Universal 2 and arm64 binaries in the archives\n\n  The files were in the repository, but were excluded from the source\n  and wheel archives.\n\npy2app 0.23\n-----------\n\n* #315: Stub executables have an LC_RPATH that points to the Frameworks folder\n\n  PR by Aleksandar Topuzović (atopuzov)\n\n* #322: Port wxPython examples to 4.0\n\n  PR by Hamish Mcintyre-Bhatty (hamishmb)\n\n* #314: Don't use Image.DEBUG in the PIL recipy, that attribute is not longer valid\n\n  PR by Aleksandar Topuzović\n\n* #320: Process \"@loader_path\" in load commands\n\n  A popular pattern in C extensions with bindins to C library on PyPI is to\n  copy those C libraries into the wheel and reference those using\n  an \"@loader_path\" linker command in the C extension. Until this release\n  py2app could not process those linker commands correctly.\n\n* #298: Add recipe for pycryptodome\n\n* #282: Add recipe for h5py\n\n* #283: Add recipe for tensorflow\n\n  The recipe just includes the entire package into the generated app bundle,\n  I haven't checked yet if there is a way to reduce the size of this\n  package (which is rather huge).\n\n\npy2app 0.22\n-----------\n\n* #319: Add ad-hoc signature for application bundles\n\n  ARM64 binaries on macOS 11 must be signed, even if it is only an ad-hoc signature.\n  py2app will now add an ad-hoc code signature.\n\n* #300: Add support for ARM64 and Universal 2 binaries\n\n  .. note:: Support is highly experimental, these stubs have not been tested yet.\n\n* #299: Fix build error when building with the copy of Python 3 shipped\n  with Xcode.\n\n* #281: Generated bundle doesn't work on macOS 10.9 and 10.10.\n\npy2app 0.21\n-----------\n\n* PR 277 (Christian Clauss): Fix some Python 3 issues\n\n* #276: Rebuilt the binary stubs on a 10.12 machine to fix launching\n\npy2app 0.20\n-----------\n\n* Migrate to GitHub\n\n* #274: Fix an issue in the PyQt5 recipe\n\n* Fix issue with emulate-shell-environment option on macOS 10.15 (Catalina)\n\n* #269: Py2app didn't work with Python 3.8\n\npy2app 0.19\n-----------\n\n* #251: Add recipe for \"botocore\"\n\n* #253: \"python setup.py py2app -A\" creates invalid bundle from \"venv\" virtual environments\n\n* Updated recipe for PySide2 and new recipe for Shiboken2\n\n  Patch by Alberto Sottile.\n\npy2app 0.18\n-----------\n\n* #250: Add recipe for \"six.moves\", which also works when the six\n  library is vendored by other packages\n\npy2app 0.17\n-----------\n\n* #247: The new tkinter recipe didn't work properly for installations\n  that do use a framework install of Tcl/Tk.\n\npy2app 0.16\n-----------\n\n* #244: Copy the Tcl/Tk support libraries into the application bundle for\n  Python builds using a classic unix install of Tcl/Tk instead of a framework\n  build.\n\n  This results in working app bundles when a Python.org installation that\n  includes Tcl/Tk (such as Python 3.7).\n\n* Don't copy numpy into application just because the application uses\n  Pillow.\n\n* Add recipe for Pyside\n\n  Patch by Alberto Sottile\n\npy2app 0.15\n-----------\n\n* Fixed issues for Python 3.7, in particular changes in the plistlib library\n  (Issue #242, #239)\n\n* Updated dependencies on macholib, altgraph and modulegraph\n\n**Due to a bug in CPython 3.7.0 using -O does not work with that version of CPython**\n\npy2app 0.14.1\n-------------\n\n* Updated dependencies\n\n* Updated PyPI metadata\n\npy2app 0.14\n-----------\n\nFeatures:\n\n* Started using flake8 to improve coding style\n\nBug fixes:\n\n* Issue #222: The fix for issue #179 broke the argv emulator\n\n* Issue #226: Py2app could fail while reporting on possibly missing modules\n\n* Issue #228: The python executable included in the app bundle as ``sys.exectuable`` was not executable\n\n\npy2app 0.13\n-----------\n\nBug fixes:\n\n* Issue 185 in PyObjC's tracker: sysconfig using ``__import__`` in Python 3.6 or\n  later, which confuses modulegraph.\n\n* Pull request #17: Location of site-packages in the \"--user\" location has changed\n\n  Patch by Matt Mukerjee\n\nFeatures:\n\n* (None yet)\n\npy2app 0.12\n-----------\n\n* Pull request #15 by Armin Samii: Safer symlink and file copying\n\n* Update recipes: a number of recipe names conflicted with toplevel\n  modules imported by recipes. This causes problems on Python 2.7 (without\n  absolute imports)\n\npy2app 0.11\n-----------\n\n- Make sure the stdout/stderr streams of the main binary of the application\n  are unbuffered.\n\n  See `issue #177 in PyObjC's repository <https://github.com/ronaldoussoren/pyobjc/issues/177/on-python3-print-does-not-automatically>`_ for more information.\n\n- Fix issue #201: py2app is not compatible with pyvenv virtualenvs\n\n  With additional fix by Oskari Timperi.\n\n- Fix issue #179: the stdout/stderr streams are no longer forwarded to console.app using ASL (by default),\n  use \"--redirect-stdout-to-asl\" to enable the redirection functionality.\n\n  Note that for unclear reasons the redirection doesn't work on OSX 10.12 at the moment.\n\n- Fix issue #188: Troubles with lxml.isoschematron\n\n  The package 'lxml.isoschematron' is not zip-safe and tries to load resources using the normal\n  filesystem APIs, which doesn't work when the package is part of a zipfile.\n\n- py2applet now longer uses \"argv_emulation\" by default, that results in too many problems.\n\n- Issue #174: clean up the summary about missing modules by removing warnings about things that aren't modules.\n\n  Also notes when an module is likely an alias for some other module. These changes should remove a lot\n  of false postive warnings from the output of py2app.\n\n- Fix issue #161: opengl recipe uses \"file\" function that isn't present on Python 3\n\n- Add \"qt5\" recipe that does the right thing for the PyQt5 wheel on PyPI (tested with PyQt5 5.6)\n\n- Add support for \"@loader_path\" in the link commands of C extension.\n\n  This makes it possible to use wheels that were processed by `delocate-listdeps <https://github.com/matthew-brett/delocate>`_\n  when building application bundles.\n\n- Do not report imports that are expected to be missing\n\n  Patch by Barry Scott.\n\npy2app 0.10\n-----------\n\n- The recipe for virtualenv calls a modulegraph method that was made\n  private in a recent release and hence no longer worked with py2app 0.9.\n\n  Update the recipe to work around this.\n\n\npy2app 0.9\n----------\n\n- issue #146, #147: The \"python\" binary in MyApp.app/Contents/MacOS was\n  the small stub exetable from framework builds, instead of the actual\n  command-line interpreter. The result is that you couldn't use\n  ``sys.executable`` to start a new interpreter, which (amongst others)\n  breaks multiprocessing.\n\n- pull request #7: Add support for PyQt5 to the sip recipe. Patch by\n  Mark Montague.\n\n- pull request #4: Copying PySide plugins was broken due to bad\n  indentation.\n\n- pull request #5: py2app was broken for python versions that\n  don't use _sysconfigdata.\n\n- issue #135: Don't sleep for a second after compiling a XIB file\n\n- issue #134: Remove target location before copying files into\n  the bundle.\n\n- issue #133: Ensure that the application's \"Framework\" folder\n  is on the search path for ``ctypes.util.find_library``.\n\n- issue #132: Depend on modulegraph 0.12 to avoid build errors\n  when the python code contains references to compatibility modules\n  that contain SyntaxErrors for the current python version.\n\n- Explicitly report modules that cannot be found at the end of\n  the run (for non-alias builds)\n\n  Note: This is just a warning, missing modules are not necessarily\n  a problem because modulegraph can detect imports for modules that\n  aren't used on OSX (for example)\n\n- Report modules that contain syntax errors at the end of\n  the run (for non-alias builds)\n\n  Note: This is just a warning, syntax errors be valid when the\n  dependency tree contains modules for the other major release\n  of python (e.g a compat_py2 module that contains compatibility\n  code for Python 2 and contains code that isn't valid Python 3)\n\npy2app 0.8.1\n------------\n\n- Loading scripts didn't work when --no-chdir was used\n\n  Reported by Barry Scott in private mail.\n\npy2app 0.8\n-----------\n\npy2app 0.8 is a feature release\n\n\n- Fixed argv emulator on OSX 10.9, the way the code detected that the application\n  was launched through the Finder didn't work on that OSX release.\n\n- The launcher binary is now linked with Cocoa, that should avoid some problems\n  with sandboxed applications (in particular: standard open panels don't seem\n  to work properly in a sandboxed application when the main binary is not\n  linked to AppKit)\n\n- Don't copy Python's Makefile, Setup file and the like into a bundle when\n  sysconfig and distutils.sysconfig don't need these files (basicly, when\n  using any recent python version).\n\n- Fix some issues with virtualenv support:\n\n  * detection of system installs of Python didn't work properly when using\n    a virtualenv. Because of this py2app did not create a \"semi-standalone\"\n    bundle when using a virtualenv created with /usr/bin/python.\n\n  * \"semi-standalone\" bundles created from a virtualenv included more files\n    when they should (in particular bits of the stdlib)\n\n- Issue #92: Add option '--force-system-tk' which ensures that the _tkinter\n  extension (used by Tkinter) is linked against the Apple build of Tcl/Tk,\n  even when it is linked to another framework in Python's std. library.\n\n  This will cause a build error when tkinter is linked with a major version of\n  Tcl/Tk that is not present in /System/Library/Frameworks.\n\n- Issue #80: Add support for copying system plugins into the application\n  bundle.\n\n  Py2app now supports a new option *include_plugins*. The value of this\n  is a list of paths to plugins that should be copied into the application\n  bundle.\n\n  Items in the list are either paths, or a tuple with the plugin type\n  and the path::\n\n      include_plugins=[\n        \"MyPlugins/MyDocument.qlgenerator\",\n        (\"SystemConfiguration\", \"MyPlugins/MyConfig.plugin\"),\n      ]\n\n  Py2app currently knows about the following plugin suffixes:\n  ``.qlgenerator``, ``.mdimporter``, ``.xpc``, ``.service``,\n  ``.prefPane``, ``.iaplugin`` and ``.action``. These plugins\n  can be added without specifying the plugin type.\n\n- Issue #83: Setup.py now refuses to install when the current\n  platform is not Mac OS X.\n\n  This makes it clear that the package is only supported on OSX and\n  avoids confusing errors later on.\n\n- Issue #39: It is now possible to have subpackages on\n  in the \"packages\" option of py2app.\n\n- Issue #37: Add recipe for pyEnchant\n\n  ..note::\n\n    The recipe only works for installations of pyEnchant\n    where pyEnchant is stored in the installation (such\n    as the binary eggs on PyPI), not for installations\n    that either use the \"PYENCHANT_LIBRARY_PATH\" environment\n    variable or MacPorts.\n\n- Issue #90: Removed the 'email' recipe, but require a new enough version\n  of modulegraph instead. Because of this py2app now requires modulegraph\n  0.11 or later.\n\npy2app 0.7.4\n------------\n\n- Issue #77: the stdout/stderr streams of application and plugin bundles did not\n  end up in Console.app on OSX 10.8 (as they do on earlier releases of OSX). This\n  is due to a change in OSX.\n\n  With this version the application executable converts writes to the stdout\n  and stderr streams to the ASL logging subsystem with the options needed to\n  end up in the default view of Console.app.\n\n  NOTE: The stdout and stderr streams of plugin bundles are not redirected, as it\n  is rather bad form to change the global environment of the host application.\n\n- The i386, x86_64 and intel stub binaries are now compiled with clang on OSX 10.8,\n  instead of an older version of GCC. The other stub versions still are compiled\n  on OSX 10.6.\n\n- Issue #111: The site.py generated by py2app now contains a USER_SITE variable\n  (with a default value of ``None``) because some software tries to import the\n  value.\n\n- Py2app didn't preserve timestamps for files copied into application bundles,\n  and this can cause a bytecompiled file to appear older than the corresponding\n  source file (for packages copied in the bundle using the 'packages' option).\n\n  Related to issue #101\n\n- Py2app also didn't copy file permissions for files copied into application\n  bundles, which isn't a problem in general but did cause binaries to lose\n  there executable permissions (as noted on Stackoverflow)\n\n- Issue #101: Set \"PYTHONDONTWRITEBYTECODE\" in the environment before\n  calling Py_Initialize to ensure that the interpreter won't try to\n  write bytecode files (which can cause problems when using sandboxed\n  applications).\n\n- Issue #105: py2app can now create app and plugin bundles when the main script\n  has an encoding other than ASCII, in particular for Python 3.\n\n- Issue #106: Ensure that the PIL recipe works on Python 3. PIL itself isn't\n  ported yet, but Pillow does work with Python 3.\n\n- \"python setup.py install\" now fails unless the machine is running Mac OS X.\n\n  I've seen a number of reports of users that try to use py2app on Windows\n  or Linux to build OSX applications. That doesn't work, py2app now fails\n  during installation do make this clear.\n\n- Disabled the 'email' recipe for python 3.x as it isn't needed there.\n\n- Issue #91: Added a recipe for `lxml <http://lxml.de/>`, needed because\n  lxml performs a number of imports from an extension and those cannot\n  be detected automaticly by modulegraph.\n\n- Issue #94: The site-packages zipfile in the application bundle now contains\n  zipfile entries for directories as well. This is needed to work around\n  a bug in the zipimporter for Python 3.3: it won't consider 'pkg/foo.py' to be\n  in namespace package 'pkg' unless there is a zipfile entry for the 'pkg'\n  folder (or there is a 'pkg/__init__.py' entry).\n\n- Issue #97: Fixes a problem with the pyside and sip recipes when the 'qt_plugins'\n  option is used for 'image_plugins'.\n\n- Issue #96: py2app should work with python 2.6 again (previous releases didn't\n  work due to using the sysconfig module introduced in python 2.7)\n\n- Issue #99: appstore requires a number of symlinks in embedded frameworks.\n\n  (Version 0.7 already added a link Python.frameworks/Versions/Current, this\n  versions also adds Python.framework/Python and Python.framework/Resources with\n  the value required by the appstore upload tool).\n\n- Py2app copied stdlib packages into the app bundle for semi-standalone builds\n  when they are mentioned in the '--packages' option (either explicitly or\n  by a recipe). This was unintentional, semi-standlone builds should rely on\n  the external Python framework for the stdlib.\n\n  .. note::\n\n     Because of this bug parts of the stdlib of ``/usr/bin/python`` could be\n     copied into app bundles created with py2app.\n\npy2app 0.7.3\n------------\n\npy2app 0.7.3 is a bugfix release\n\n- Issue #82: Remove debug print statement from py2app.util.LOADER that\n  caused problems with Python 3.\n\n- Issue #81: Py2app now fails with an error when trying to build a bundle\n  for a unix-style shared library build of Python (``--enable-shared``) unless\n  you are using a recent enough patchlevel of python (2.7.4, 3.2.3, 3.3.1,\n  3.4.0, all of them are not released yet).\n\n  The build failure was added to avoid a very confusing error when trying\n  to start the generated application due to a bug in the way python reads\n  the environment (for shared library builds on Mac OS X).\n\n- Py2app will also give an error message when the python binary does not\n  have a shared library (or framework) at all.\n\n- Issue #87: Ignore '.git' and '.hg' directories while copying package data\n  ('.svn' and 'CVS' were already ignored).\n\n- Issue #65: the fix in 0.7 to avoid copying a symlinked library twice caused\n  problems for some users because only one of the file names ended up in the\n  application bundle. This release ensures that both names exist (one as a\n  symbolic name to the other).\n\n- Issue #88: Ensure that the fix for #65 won't try to create a symlink that\n  points to itself. This could for example occur with homebrew, where the\n  exposed lib directory contains symlinks to a cellar, while tye install_name\n  does mention the \"public\" lib directory::\n\n     $ ls -l /opt/homebrew/lib\n     ...\n     libglib-2.0.0.dylib -> ../Cellar/glib/2.32.4/lib/libglib-2.0.0.dylib\n     ...\n\n     $ otool -vL /opt/homebrew/lib/libglib-2.0.0.dylib\n     /opt/homebrew/lib/libglib-2.0.0.dylib:\n        /opt/homebrew/lib/libglib-2.0.0.dylib (compatibility version 3201.0.0, current version 3201.4.0)\n        time stamp 1 Thu Jan  1 01:00:01 1970\n     ...\n\n\n\npy2app 0.7.2\n------------\n\npy2app 0.7.2 is a bugfix release\n\n- Issue #75: Don't remove ``--dist-dir``, but only remove the old version\n  of the objects we're trying to build (if that exists).\n\n  This once again makes it possible to have a number of setup.py files that\n  build plugins into the same target folder (such as the plugins folder\n  of an application)\n\n- Issue #78: Packages added using the ``--packages`` option didn't end up\n  on ``sys.path`` for semi-standalone applications.\n\n  Reported by Steve Strassmann\n\n- Issue #76: Semi-standalone packages using extensions modules coudn't use\n  extensions unless they also used the ``--site-packages`` option (and\n  the extensions are in the site-packages directory).\n\n  Fixes some problems with PyQt and wxWidgets when using the system installation\n  of Python.\n\n  Patch by Dan Horner.\n\n- It is currently not possible to use a subpackage (\"foo.bar\") in the list\n  of packages for the \"packages\" option. Py2app now explicitly checks for this\n  and prints an error message instead of building an application that doesn't\n  work.\n\n  Issue: #39\n\n\npy2app 0.7.1\n------------\n\npy2app 0.7.1 is a bugfix release\n\n- Always include 'pkg_resources', this is needed to correctly work with\n  setuptools namespace packages, the __init__.py files of those contain\n  ``__import__('pkg_resources')`` and that call isn't recognized as an import\n  by the bytecode scanner.\n\n- Issue #67: py2applet didn't work with python 3 due to the use of 'raw_input'\n\n  Reported by Andrew Barnert.\n\n- Issue #68: the \"extra-scripts\" feature introduced in 0.7 couldn't copy scripts\n  that aren't in the same directory as \"setup.py\".\n\n  Reported by Andrew Barnert.\n\n- For semi-standalone applications the \"lib-dynload\" directory inside the\n  application was not on \"sys.path\", which resulted in launch failures\n  when using an extension that is not in the stdlib.\n\n- Issue #70: application fails to launch when script uses Windows line endings\n\n  Reported by Luc Jean.\n\npy2app 0.7\n------------\n\npy2app 0.7 is a bugfix release\n\n- Issue #65: generated bundle would crash when two libraries linked to the\n  same library using different names (one refering to the real name, the other\n  to a symlink).\n\n  An example if this is an application using wxWidgets when wxWidgets is installed\n  using homebrew.\n\n  Reported by \"Bouke\".\n\n- Issue #13: It is now possible to add helper scripts to a bundle, for\n  example for creating a GUI that starts a helper script in the background.\n\n  This can be done by using the option \"--extra-scripts\", the value of which is a list\n  of script files (\".py\" or \".pyw\" files).\n\n- Smarter matplotlib recipe, it is now possible to specify which backends should\n  be included. Issue #44, reported by Adam Kovics.\n\n  The argument to ``--matplotlib-backends`` (or 'matplotlib_backends' in setup.py)\n  is a list of plugins to include. Use '-' to not include backends other than those\n  found by the import statement analysis, and '*' to include all backends (without\n  necessarily including all of matplotlib)\n\n  As an example, use ``--matplotlib-backends=wxagg`` to include just the wxagg\n  backend.\n\n  Default is to include the entire matplotlib package.\n\n- The packages included by a py2app recipe weren't processed by modulegraph and\n  hence their dependencies were not always included.\n\n- Fix virtualenv support: alias builds in a virtual environment failed to work.\n\n  (There are still issues with semi-standalone and alias plugin bundles in\n  a virtualenv environment).\n\n- issue #18: improved PyQt and PySide support.\n\n  Py2app now has a new option named \"--qt-plugins\" (or \"qt_plugins\" in setup.py),\n  this option specify a list of plugins that should be included in the\n  application bundle. The items of the list can have a number of forms:\n\n  * \"plugintype/libplugin.dylib\"\n\n    Specify one particular plugin\n\n  * \"plugintype/\\*foo\\*\"\n\n    Specify one or more plugins using a glob pattern\n\n  * \"plugintype\"\n\n    Include all plugins of a type, equivalent to \"plugintype/\\*\".\n\n  The plugins are copied into \"Resources/qt_plugins\" and py2app adds a \"qt.conf\"\n  file that points to that location for plugins.\n\n- issue #49: package data that is a zipfile is now correctly copied into\n  the bundle instead of extracting the archive.\n\n- issue #59: compile site.py to ensure that the generated bundle doesn't\n  change on first run.\n\n  This is nice to have in general, and essential when using code signing\n  because the signature will break when a new file is added after signing.\n\n  Reported by Michael McCracken.\n\n- issue #60: recipe for \"email\" package was not loaded\n\n  Reported by Chris Beaumont\n\n- issue #46: py2app no longer warns about the Qt license. We don't warn about\n  other possibly GPL licensed software either and py2app is not\n  a license-enforcement tool.\n\n  Reported by briank_in_la.\n\n- Generated bundles always started with python optimization active\n  (that is, as if running as 'python -O').\n\n- Fix issue #53: py2app would crash if a data file happened to\n  be a zipfile.\n\n- py2app copies data files in the directory for a package into\n  the application bundle. It also did this for directories that\n  represent subpackages, which made it impossible to exclude\n  subpackages.\n\n- added recipe for wxPython because some subpackages of wxPython\n  use ``__path__`` trickery that confuses modulegraph.\n\n- recipes can now return a list of additional entries for the\n  'includes' list.\n\n- rewritten the recipe for matplotlib. The recipe no longer includes\n  the entire package, but just the \"mpl-data\" directory.\n\n  WARNING: This recipe has had limited testing.\n\n- fix mixed indentation (tabs and spaces) in argv_emulation.py,\n  which caused installation failures on python 3.x (issue #40)\n\n- Issue #43: py2app now creates a symlink named \"Current\" in the\n  'Versions' directory of the embedded Python framework to comply\n  with a requirement for the Mac App-store.\n\n- on some OSX releases the application receives both the\n  \"open application\" and \"open documents\" Apple Events during startup,\n  which broke an assumption in argv_emulation.py.\n\n- py2app is more strict w.r.t. explictly closing files, this avoids\n  ResourceWarnings for unclosed files.\n\n- fix test issue with semi-standalone builds on Python 3.2\n\n- added recipe for pyzmq\n\n- Don't use the version information from Python.framework's Info.plist,\n  but use ``sys.version_info``. This fixes a build problem with EPD.\n\n- Ignore some more files when copying package data:\n\n  - VIM swap files (``.foo.py.swp``)\n\n  - Backup files for a number of tools: ``foo.orig`` and ``foo~``\n\npy2app 0.6.4\n------------\n\npy2app 0.6.4 is a bugfix and minor feature release\n\n- Issue #28: the argv emulator crashes in 64-bit mode on OSX 10.5\n\n  Fixing this issue required yet another rewrite of the argv_emulator\n  code.\n\n- Added option '--arch=VALUE' which can be used to select the set of\n  architectures for the main executable. This defaults to the set of\n  architectures supported by the python interpreter and can be used to\n  drop support for some architectures (for example when you're using a\n  python binary that supports both 32-bit and 64-bit code and use a\n  GUI library that does not yet work in 64-bit mode).\n\n  Valid values for the argument are archectures used in the list below\n  and the following groups of architectures:\n\n  * fat:        i386, ppc\n\n  * fat3:       i386, x86_64, ppc\n\n  * univeral:   i386, x86_64, ppc, ppc64\n\n  * intel:      i386, x86_64\n\n\n\n- Issue #32: fix crash when application uses PySide\n\n  This is partially fixed in macholib (release 1.4.3)\n\n- The '-O' flag of py2app now defaults to the python optimization level\n  when using python 2.6 or later.\n\n- Issue #31: honor optimze flag at runtime.\n\n  Until now an application bundle created by py2app would also run without\n  the \"-O\" flag, even when the user specified it should. This is now fixed.\n\n- Issue #33: py2app's application bundle launcher now clears the environment\n  variable ``PYOBJC_BUNDLE_ADDRESS``, avoids a crash when using PyObjC in an\n  application launched from a py2app based plugin bundle.\n\n- py2app's bundle launcher set the environment variable ``PYOBJC_BUNDLE_ADDRESS``,\n  this variable is now deprecated. Use ``PYOBJC_BUNDLE_ADDRESS<PID>`` instead\n  (replace ``<PID>`` by the process ID of the current process).\n\n- When using the system python we now explicitly add Apple's additional packages\n  (like PyObjC and Twisted) to ``sys.path``.\n\n  This fixes and issue reported by Sean Robinson: py2app used to create a non-working\n  bundle when you used these packages because the packages didn't get included\n  (as intented), but were not available on ``sys.path`` either.\n\n- Fixed the recipe for sip, which in turn ensures that PyQt4 applications\n  work.\n\n  As before the SIP recipe is rather crude, it will include *all* SIP-based\n  packages into your application bundle when it detects a module that uses\n  SIP.\n\n- The 'Resources' folder is no longer on the python search path,\n  it contains the scripts while Python modules and packages are located\n  in the site-packages directory. This change is related to issue #30.\n\n- The folder 'Resources/Python/site-packages' is no longer on the python\n  search path. This folder is not used by py2app itself, but might by\n  used by custom build scripts that wrap around py2app.\n\n- Issue #30: py2app bundles failed to launch properly when the scriptfile\n  has the same name as a python package used by the application.\n\n- Issue #15: py2app now has an option to emulate the shell environment you\n  get by opening a window in the Terminal.\n\n  Usage: ``python setup.py py2app --emulate-shell-environment``\n\n  This option is experimental, it is far from certain that the implementation\n  works on all systems.\n\n- Issue #16: ``--argv-emulation`` now works with Python 3.x and in 64-bit\n  executables.\n\n- Issue #17: py2applet script defaults 'argv_emulation' to False when your using\n  a 64-bit build of python, because that option is not supported on\n  such builds.\n\n- py2app now clears the temporary directory in 'build' and the output directory\n  in 'dist' before doing anything. This avoids unwanted interactions between\n  results from a previous builds and the current build.\n\n- Issue #22: py2app will give an error when the specified version is invalid,\n  instead of causing a crash in the generated executable.\n\n- Issue #23: py2app failed to work when an .egg directory was implictly added\n  to ``sys.path`` by setuptools and the \"-O\" option was used (for example\n  ``python setup.py py2app -O2``)\n\n- Issue #26: py2app copied the wrong executable into the application bundle\n  when using virtualenv with a framework build of Python.\n\npy2app 0.6.3\n------------\n\npy2app 0.6.3 is a bugfix release\n\n- py2app failed to compile .xib files\n  (as reported on the pythonmac-sig mail-ing list).\n\n\npy2app 0.6.2\n------------\n\npy2app 0.6.2 is a bugfix release\n\n- py2app failed to copy the iconfile into application bundle\n  (reported by Russel Owen)\n\n- py2app failed to copy resources and data files as well\n  (the ``resource`` key in the py2ap options dictionary and\n  the ``data_files`` argument to the setup function).\n\n  Issue #19, reported by bryon(at)spideroak.com.\n\n- py2app failed to build application bundles when using virtualenv\n  due to assumptions about the relation between ``sys.prefix`` and\n  ``sys.executable``.\n\n  Report and fix by Erik van Zijst.\n\n- Ensure that the 'examples' directory is included in the source\n  archive\n\npy2app 0.6.1\n------------\n\npy2app 0.6.1 is a bugfix release\n\nBugfixes:\n\n- py2app failed to build the bundle when python package contained\n  a zipfile with data.\n\n  This version solves most of that problem using a rough\n  workaround (the issue is fixed when the filename ends with '.zip').\n\n- The code that recreates the stub executables when they are\n  older than the source code now uses ``xcode-select`` to\n  find the root of SDKs.\n\n  This makes it possible to recreate these executables on machines\n  where both Xcode 3 and Xcode 4 are installed and Xcode 3 is\n  the default Xcode.\n\n- The stub executables were regenerated using Xcode 3\n\n  As a word of warning: Xcode 4 cannot be used to rebuild the\n  stub executables, in particular not those that have support\n  for the PPC architecture.\n\n- Don't rebuild the stub executables automaticly, that's\n  unsafe with Xcode 4 and could trigger accidently when\n  files are installed in a different order than expected.\n\n- Small tweaks to the testsuite to ensure that they work\n  on systems with both Xcode3 and Xcode4 (Xcode3 must be\n  the selected version).\n\n- Better cleanup in the testsuite when ``setupClass`` fails.\n\npy2app 0.6\n----------\n\npy2app 0.6 is a minor feature release\n\n\nFeatures:\n\n- it is now possible to specify which python distributions must\n  be availble when building the bundle by using the\n  \"install_requires\" argument of the ``setup()`` function::\n\n     setup(\n\n         ...\n\t install_requires = [\n\t \t\"pyobjc == 2.2\"\n\t ],\n     )\n\n- py2app can now package namespace packages that were installed\n  using `pip <http://pypi.python.org/pypi/pip>` or the\n  setuptools install option ``--single-version-externally-managed``.\n\n- the bundle template now supports python3, based on a patch\n  by Virgil Dupras.\n\n- alias builds no longer use Carbon Aliases and therefore are\n  supported with python3 as well (patch by Virgil Dupras)\n\n- argv emulation doesn't work in python 3, this release\n  will tell you abou this instead of silently failing to\n  build a working bundle.\n\n- add support for custom URLs to the argv emulation code\n  (patch by Brendan Simon).\n\n  You will have to add a \"CFBundleURLTypes\" key to your Info.plist to\n  use this, the argv emulation code will ensure that the URL\n  to open will end up in ``sys.argv``.\n\n- ``py2app.util`` contains a number of functions that are now\n  deprecated an will be removed in a future version, specifically:\n  ``os_path_islink``, ``os_path_isdir``, ``path_to_zip``,\n  ``get_zip_data``, ``get_mtime``,  and ``os_readlink``.\n\n- The module ``py2app.simpleio`` no longer exists, and should never\n  have been in the repository (it was part of a failed rewrite of\n  the I/O layer).\n\nBug fixes:\n\n- fix problem with symlinks in copied framework, as reported\n  by Dan Ross.\n\n- py2applet didn't work in python 3.x.\n\n- The ``--alias`` option didn't work when building a plugin\n  bundle (issue #10, fix by Virgil Dupras)\n\n- Avoid copying the __pycache__ directory in python versions\n  that implement PEP 3147 (Python 3.2 and later)\n\n- App bundles with Python 3 now work when the application is\n  stored in a directory with non-ASCII characters in the full\n  name.\n\n- Do not compile ``.nib`` files, it is not strictly needed and\n  breaks PyObjC projects that still use the NibClassBuilder code.\n\n- Better error messsages when trying to include a non-existing\n  file as a resource.\n\n- Don't drop into PDB when an exception occurs.\n\n- Issue #5: Avoid a possible stack overflow in the bundle executable\n\n- Issue #9: Work with python 3.2\n\n- Fix build issues with python 2.5 (due to usage of too modern distutils\n  command subclasses)\n\n- The source distribution didn't include all files that needed to be\n  it ever since switching to mercurial, I've added a MANIFEST.in\n  file rather than relying on setuptool's autoguessing of files to include.\n\n- Bundle template works again with semi-standalone builds (such as\n  when using a system python), this rewrites the fix for issue #10\n  mentioned earlier.\n\n- Ensure py2app works correctly when the sources are located in a\n  directory with non-ascii characters in its name.\n\n\npy2app 0.5.2\n------------\n\npy2app 0.5.2 is a bugfix release\n\nBug fixes:\n\n- Ensure that the right stub executable gets found when using\n  the system python 2.5\n\npy2app 0.5.1\n------------\n\npy2app 0.5.1 is a bugfix release\n\nBug fixes:\n\n- Ensure stub executables get included in the egg files\n\n- Fix name of the bundletemplate stub executable for 32-bit builds\n\n\n\npy2app 0.5\n----------\n\npy2app 0.5 is a minor feature release.\n\nFeatures:\n\n- Add support for the ``--with-framework-name`` option of Python's\n  configure script, that is: py2app now also works when the Python\n  framework is not named 'Python.framework'.\n\n- Add support for various build flavours of Python (32bit, 3-way, ...)\n\n- py2app now actually works for me (ronaldoussoren@mac.com) with a\n  python interpreter in a virtualenv environment.\n\n- Experimental support for python 3\n\nBug fixes:\n\n- Fix recipe for matplotlib: that recipe caused an exception with\n  current versions of matplotlib and pytz.\n\n- Use modern API's in the alias-build bootstrap code, without\n  this 'py2app -A' will result in broken bundles on a 64-bit build\n  of Python.\n  (Patch contributed by James R Eagan)\n\n- Try both 'import Image' and 'from PIL import Image' in the PIL\n  recipe.\n  (Patch contributed by Christopher Barker)\n\n- The stub executable now works for 64-bit application bundles\n\n- (Lowlevel) The application stub was rewritten to use\n  ``dlopen`` instead of ``dyld`` APIs. This removes deprecation\n  warnings during compilation.\n\npy2app 0.4.3\n------------\n\npy2app 0.4.3 is a bugfix release\n\nBug fixes:\n\n- A bad format string in build_app.py made it impossible to copy the\n  Python framework into an app bundle.\n\npy2app 0.4.2\n------------\n\npy2app 0.4.2 is a minor feature release\n\nFeatures:\n\n- When the '--strip' option is specified we now also remove '.dSYM'\n  directories from the bundle.\n\n- Remove dependency on a 'version.plist' file in the python framework\n\n- A new recipe for `PyQt`_ 4.x. This recipe was donated by Kevin Walzer.\n\n- A new recipe for `virtualenv`_, this allows you to use py2app from\n  a virtual environment.\n\n.. _`virtualenv`: http://pypi.python.org/pypi/virtualenv\n\n- Adds support for converting ``.xib`` files (NIB files for\n  Interface Builder 3)\n\n- Introduces an experimental plugin API for data converters.\n\n  A conversion plugin should be defined as an entry-point in the\n  ``py2app.converter`` group::\n\n       setup(\n         ...\n\t entry_points = {\n\t\t 'py2app.converter': [\n\t\t     \"label          = some_module:converter_function\",\n\t\t  ]\n\t  },\n\t  ...\n      )\n\n  The conversion function should be defined like this::\n\n      from py2app.decorators import converts\n\n      @converts('.png')\n      def optimze_png(source, proposed_destionation, dryrun=0):\n         # Copy 'source' to 'proposed_destination'\n\t # The conversion is allowed to change the proposed\n\t # destination to another name in the same directory.\n         pass\n\n.. `virtualenv`_: http://pypi.python.org/pypi/virtualenv\n\nBuf fixes:\n\n- This fixes an issue with copying a different version of Python over\n  to an app/plugin bundle than the one used to run py2app with.\n\n\npy2app 0.4.0\n------------\n\npy2app 0.4.0 is a minor feature release (and was never formally released).\n\nFeatures:\n\n- Support for CoreData mapping models (introduced in Mac OS X 10.5)\n\n- Support for python packages that are stored in zipfiles (such as ``zip_safe``\n  python eggs).\n\nBug fixes:\n\n- Fix incorrect symlink target creation with an alias bundle that has included\n  frameworks.\n\n- Stuffit tends to extract archives recursively, which results in unzipped\n  code archives inside py2app-created bundles. This version has a workaround\n  for this \"feature\" for Stuffit.\n\n- Be more carefull about passing non-constant strings as the template argumenti\n  of string formatting functions (in the app and bundle templates), to avoid\n  crashes under some conditions.\n\npy2app 0.3.6\n------------\n\npy2app 0.3.6 is a minor bugfix release.\n\nBug fixes:\n\n- Ensure that custom icons are copied into the output bundle\n\n- Solve compatibility problem with some haxies and inputmanager plugins\n\n\npy2app 0.3.5\n------------\n\npy2app 0.3.5 is a minor bugfix release.\n\nBug fixes:\n\n- Resolve disable_linecache issue\n\n- Fix Info.plist and Python path for plugins\n\n\npy2app 0.3.4\n------------\n\npy2app 0.3.4 is a minor bugfix release.\n\nBug fixes:\n\n- Fixed a typo in the py2applet script\n\n- Removed some, but not all, compiler warnings from the bundle template\n  (which is still probably broken anyway)\n\n\npy2app 0.3.3\n------------\n\npy2app 0.3.3 is a minor bugfix release.\n\nBug Fixes:\n\n- Fixed a typo in the argv emulation code\n\n- Removed the unnecessary py2app.install hack (setuptools does that already)\n\n\npy2app 0.3.2\n------------\n\npy2app 0.3.2 is a major bugfix release.\n\nFunctional changes:\n\n- Massively updated documentation\n\n- New prefer-ppc option\n\n- New recipes: numpy, scipy, matplotlib\n\n- Updated py2applet script to take options, provide --make-setup\n\nBug Fixes:\n\n- No longer defaults to LSPrefersPPC\n\n- Replaced stdlib usage of argvemulator to inline version for i386\n  compatibility\n\n\npy2app 0.3.1\n------------\n\npy2app 0.3.1 is a minor bugfix release.\n\nFunctional changes:\n\n- New EggInstaller example\n\nBug Fixes:\n\n- Now ensures that the executable is +x (when installed from egg this may not\n  be the case)\n\n\npy2app 0.3.0\n------------\n\npy2app 0.3.0 is a major feature enhancements release.\n\nFunctional changes:\n\n- New --xref (-x) option similar to py2exe's that produces\n  a list of modules and their interdependencies as a HTML\n  file\n\n- sys.executable now points to a regular Python interpreter\n  alongside the regular executable, so spawning sub-interpreters\n  should work much more reliably\n\n- Application bootstrap now detects paths containing \":\"\n  and will provide a \"friendly\" error message instead of just\n  crashing <http://python.org/sf/1507224>.\n\n- Application bootstrap now sets PYTHONHOME instead of\n  a large PYTHONPATH\n\n- Application bootstrap rewritten in C that links to\n  CoreFoundation and Cocoa dynamically as needed,\n  so it doesn't imply any particular version of the runtime.\n\n- Documentation and examples changed to use setuptools\n  instead of distutils.core, which removes the need for\n  the py2app import\n\n- Refactored to use setuptools, distributed as an egg.\n\n- macholib, bdist_mpkg, modulegraph, and altgraph are now\n  separately maintained packages available on PyPI as eggs\n\n- macholib now supports little endian architectures,\n  64-bit Mach-O headers, and reading/writing of\n  multiple headers per file (fat / universal binaries)\n\n\npy2app 0.2.1\n------------\n\npy2app 0.2.1 is a minor bug fix release.\n\nBug Fixes:\n\n- macholib.util.in_system_path understands SDKs now\n\n- DYLD_LIBRARY_PATH searching is fixed\n\n- Frameworks and excludes options should work again.\n\n\npy2app 0.2.0\n------------\n\npy2app 0.2.0 is a minor bug fix release.\n\nFunctional changes:\n\n- New datamodels option to support CoreData.  Compiles\n  .xcdatamodel files and places them in the Resources dir\n  (as .mom).\n\n- New use-pythonpath option.  The py2app application bootstrap\n  will no longer use entries from PYTHONPATH unless this option\n  is used.\n\n- py2app now persists information about the build environment\n  (python version, executable, build style, etc.) in the\n  Info.plist and will clean the executable before rebuilding\n  if anything at all has changed.\n\n- bdist_mpkg now builds packages with the full platform info,\n  so that installing a package for one platform combination\n  will not look like an upgrade to another platform combination.\n\nBug Fixes:\n\n- Fixed a bug in standalone building, where a rebuild could\n  cause an unlaunchable executable.\n\n- Plugin bootstrap should compile/link correctly\n  with gcc 4.\n\n- Plugin bootstrap no longer sets PYTHONHOME and will\n  restore PYTHONPATH after initialization.\n\n- Plugin bootstrap swaps out thread state upon plug-in\n  load if it is the first to initialize Python.  This\n  fixes threading issues.\n\npy2app 0.1.9\n------------\n\npy2app 0.1.9 is a minor bug fix release.\n\nBugs fixed:\n\n- bdist_mpkg now builds zip files that are correctly unzipped\n  by all known tools.\n\n- The behavior of the bootstrap has changed slightly such that\n  ``__file__`` should now point to your main script, rather than\n  the bootstrap.  The main script has also moved to ``Resources``,\n  from ``Resources/Python``, so that ``__file__`` relative resource\n  paths should still work.\n\npy2app 0.1.8\n------------\n\npy2app 0.1.8 is a major enhancements release:\n\nBugs fixed:\n\n- Symlinks in included frameworks should be preserved correctly\n  (fixes Tcl/Tk)\n\n- Fixes some minor issues with alias bundles\n\n- Removed implicit SpiderImagePlugin -> ImageTk reference in PIL\n  recipe\n\n- The ``--optimize`` option should work now\n\n- ``weakref`` is now included by default\n\n- ``anydbm``'s dynamic dependencies are now in the standard implies\n  list\n\n- Errors on app launch are brought to the front so the user does\n  not miss them\n\n- bdist_mpkg now compatible with pychecker (data_files had issues)\n\nOptions changed:\n\n- deprecated ``--strip``, it is now on by default\n\n- new ``--no-strip`` option to turn off stripping of executables\n\nNew features:\n\n- Looks for a hacked version of the PyOpenGL __init__.py so that\n  it doesn't have to include the whole package in order to get\n  at the stupid version file.\n\n- New ``loader_files`` key that a recipe can return in order to\n  ensure that non-code ends up in the .zip (the pygame recipe\n  uses this)\n\n- Now scans all files in the bundle and normalizes Mach-O load\n  commands, not just extensions.  This helps out when using the\n  ``--package`` option, when including frameworks that have plugins,\n  etc.\n\n- An embedded Python interpreter is now included in the executable\n  bundle (``sys.executable`` points to it), this currently only\n  works for framework builds of Python\n\n- New ``macho_standalone`` tool\n\n- New ``macho_find`` tool\n\n- Major enhancements to the way plugins are built\n\n- bdist_mpkg now has a ``--zipdist`` option to build zip files\n  from the built package\n\n- The bdist_mpkg \"Installed to:\" description is now based on the\n  package install root, rather than the build root\n\npy2app 0.1.7\n------------\n\n`py2app`_ 0.1.7 is a bug fix release:\n\n- The ``bdist_mpkg`` script will now set up sys.path properly, for setup scripts\n  that require local imports.\n\n- ``bdist_mpkg`` will now correctly accept ``ReadMe``, ``License``, ``Welcome``,\n  and ``background`` files by parameter.\n\n- ``bdist_mpkg`` can now display a custom background again (0.1.6 broke this).\n\n- ``bdist_mpkg`` now accepts a ``build-base=`` argument, to put build files in\n  an alternate location.\n\n- ``py2app`` will now accept main scripts with a ``.pyw`` extension.\n\n- ``py2app``'s not_stdlib_filter will now ignore a ``site-python`` directory as\n  well as ``site-packages``.\n\n- ``py2app``'s plugin bundle template no longer displays GUI dialogs by default,\n  but still links to ``AppKit``.\n\n- ``py2app`` now ensures that the directory of the main script is now added to\n  ``sys.path`` when scanning modules.\n\n- The ``py2app`` build command has been refactored such that it would be easier\n  to change its behavior by subclassing.\n\n- ``py2app`` alias bundles can now cope with editors that do atomic saves\n  (write new file, swap names with existing file).\n\n- ``macholib`` now has minimal support for fat binaries.  It still assumes big\n  endian and will not make any changes to a little endian header.\n\n- Add a warning message when using the ``install`` command rather than installing\n  from a package.\n\n- New ``simple/structured`` example that shows how you could package an\n  application that is organized into several folders.\n\n- New ``PyObjC/pbplugin`` Xcode Plug-In example.\n\npy2app 0.1.6\n------------\n\nSince I have been slacking and the last announcement was for 0.1.4, here are the\nchanges for the soft-launched releases 0.1.5 and 0.1.6:\n\n`py2app`_ 0.1.6 was a major feature enhancements release:\n\n- ``py2applet`` and ``bdist_mpkg`` scripts have been moved to Python modules\n  so that the functionality can be shared with the tools.\n\n- Generic graph-related functionality from ``py2app`` was moved to\n  ``altgraph.ObjectGraph`` and ``altgraph.GraphUtil``.\n\n- ``bdist_mpkg`` now outputs more specific plist requirements\n  (for future compatibility).\n\n- ``py2app`` can now create plugin bundles (MH_BUNDLE) as well as executables.\n  New recipe for supporting extensions built with `sip`_, such as `PyQt`_.  Note that\n  due to the way that `sip`_ works, when one sip-based extension is used, *all*\n  sip-based extensions are included in your application.  In practice, this means\n  anything provided by `Riverbank`_, I don't think anyone else uses `sip`_ (publicly).\n\n- New recipe for `PyOpenGL`_.  This is very naive and simply includes the whole\n  thing, rather than trying to monkeypatch their brain-dead\n  version acquisition routine in ``__init__``.\n\n- Bootstrap now sets ``ARGVZERO`` and ``EXECUTABLEPATH`` environment variables,\n  corresponding to the ``argv[0]`` and the ``_NSGetExecutablePath(...)`` that the\n  bundle saw.  This is only really useful if you need to relaunch your own\n  application.\n\n- More correct ``dyld`` search behavior.\n\n- Refactored ``macholib`` to use ``altgraph``, can now generate `GraphViz`_ graphs\n  and more complex analysis of dependencies can be done.\n\n- ``macholib`` was refactored to be easier to maintain, and the structure handling\n  has been optimized a bit.\n\n- The few tests that there are were refactored in `py.test`_ style.\n\n- New `PyQt`_ example.\n\n- New `PyOpenGL`_ example.\n\n\nSee also:\n\n- http://mail.python.org/pipermail/pythonmac-sig/2004-December/012272.html\n\n.. _`py.test`: http://codespeak.net/py/current/doc/test.html\n.. _`PyOpenGL`: http://pyopengl.sourceforge.net/\n.. _`Riverbank`: http://www.riverbankcomputing.co.uk/\n.. _`sip`: http://www.riverbankcomputing.co.uk/sip/index.php\n.. _`PyQt`: http://www.riverbankcomputing.co.uk/pyqt/index.php\n.. _`docutils`: http://docutils.sf.net/\n.. _`setuptools`: http://cvs.eby-sarna.com/PEAK/setuptools/\n\npy2app 0.1.5\n------------\n\n`py2app`_ 0.1.5 is a major feature enhancements release:\n\n- Added a ``bdist_mpkg`` distutils extension, for creating Installer\n  an metapackage from any distutils script.\n\n  - Includes PackageInstaller tool\n\n  - bdist_mpkg script\n\n  - setup.py enhancements to support bdist_mpkg functionality\n\n- Added a ``PackageInstaller`` tool, a droplet that performs the same function\n    as the ``bdist_mpkg`` script.\n\n- Create a custom ``bdist_mpkg`` subclass for `py2app`_'s setup script.\n\n- Source package now includes `PJE`_'s `setuptools`_ extension to distutils.\n\n- Added lots of metadata to the setup script.\n\n- ``py2app.modulegraph`` is now a top-level package, ``modulegraph``.\n\n- ``py2app.find_modules`` is now ``modulegraph.find_modules``.\n\n- Should now correctly handle paths (and application names) with unicode characters\n  in them.\n\n- New ``--strip`` option for ``py2app`` build command, strips all Mach-O files\n  in output application bundle.\n\n- New ``--bdist-base=`` option for ``py2app`` build command, allows an alternate\n  build directory to be specified.\n\n- New `docutils`_ recipe.\n  Support for non-framework Python, such as the one provided by `DarwinPorts`_.\n\nSee also:\n\n- http://mail.python.org/pipermail/pythonmac-sig/2004-October/011933.html\n\n.. _`py.test`: http://codespeak.net/py/current/doc/test.html\n.. _`GraphViz`: http://www.pixelglow.com/graphviz/\n.. _`PyOpenGL`: http://pyopengl.sourceforge.net/\n.. _`Riverbank`: http://www.riverbankcomputing.co.uk/\n.. _`sip`: http://www.riverbankcomputing.co.uk/sip/index.php\n.. _`PyQt`: http://www.riverbankcomputing.co.uk/pyqt/index.php\n.. _`DarwinPorts`: http://darwinports.opendarwin.org/\n.. _`setuptools`: http://cvs.eby-sarna.com/PEAK/setuptools/\n.. _`PJE`: http://dirtSimple.org/\n.. _`PyObjC`: http://pyobjc.sourceforge.net/\n\npy2app 0.1.4\n------------\n\n`py2app`_ 0.1.4 is a minor bugfix release:\n\n- The ``altgraph`` from 0.1.3 had a pretty nasty bug in it that prevented\n  filtering from working properly, so I fixed it and bumped to 0.1.4.\n\npy2app 0.1.3\n------------\n\n`py2app`_ 0.1.3 is a refactoring and new features release:\n\n- ``altgraph``, my fork of Istvan Albert's `graphlib`_, is now part of the\n  distribution\n\n- ``py2app.modulegraph`` has been refactored to use ``altgraph``\n\n- `py2app`_ can now create `GraphViz`_ DOT graphs with the ``-g`` option\n  (`TinyTinyEdit example`_)\n\n- Moved the filter stack into ``py2app.modulegraph``\n\n- Fixed a bug that may have been in 0.1.2 where explicitly included packages\n  would not be scanned by ``macholib``\n\n- ``py2app.apptemplate`` now contains a stripped down ``site`` module as\n  opposed to a ``sitecustomize``\n\n- Alias builds are now the only ones that contain the system and user\n  ``site-packages`` directory in ``sys.path``\n\n- The ``pydoc`` recipe has been beefed up to also exclude ``BaseHTTPServer``,\n  etc.\n\nKnown issues:\n\n- Commands marked with XXX in the help are not implemented\n\n- Includes *all* files from packages, it should be smart enough to strip\n  unused .py/.pyc/.pyo files (to save space, depending on which optimization\n  flag is used)\n\n- ``macholib`` should be refactored to use ``altgraph``\n\n- ``py2app.build_app`` and ``py2app.modulegraph`` should be refactored to\n  search for dependencies on a per-application basis\n\n.. _`graphlib`: http://www.personal.psu.edu/staff/i/u/iua1/python/graphlib/html/\n.. _`TinyTinyEdit example`: http://undefined.org/~bob/TinyTinyEdit.pdf\n\npy2app 0.1.2\n------------\n\n`py2app`_ 0.2 is primarily a bugfix release:\n\n- The encodings package now gets included in the zip file (saves space)\n\n- A copy of the Python interpreter is not included anymore in standalone\n  builds (saves space)\n\n- The executable bootstrap is now stripped by default (saves a little space)\n\n- ``sys.argv`` is set correctly now, it used to point to the executable, now\n  it points to the boot script.  This should enhance compatibility with some\n  applications.\n\n- Adds an \"Alias\" feature to modulegraph, so that ``sys.modules`` craziness\n  such as ``wxPython.wx -> wx`` can be accomodated (this particular craziness\n  is also now handled by default)\n\n- A ``sys.path`` alternative may be passed to ``find_modules`` now, though\n  this is not used yet\n\n- The ``Command`` instance is now passed to recipes instead of the\n  ``Distribution`` instance (though no recipes currently use either)\n\n- The post-filtering of modules and extensions is now generalized into a\n  stack and can be modified by recipes\n\n- A `wxPython`_ example demonstrating how to package `wxGlade`_ has been\n  added (this is a good example of how to write your own recipe, and how to\n  deal with complex applications that mix code and data files)\n\n- ``PyRuntimeLocations`` is now set to (only) the location of the current\n  interpreter's ``Python.framework`` for alias and semi-standalone build\n  modes (enhances compatibility with extensions built with an unpatched\n  Makefile with Mac OS X 10.3's Python 2.3.0)\n\nKnown issues:\n\n- Includes *all* files from packages, it should be smart enough to strip\n  unused .py/.pyc/.pyo files (to save space, depending on which optimization\n  flag is used).\n\n.. _`wxGlade`: http://wxglade.sourceforge.net/\n\npy2app 0.1.1\n------------\n\n`py2app`_ 0.1.1 is primarily a bugfix release:\n\n- Several problems related to Mac OS X 10.2 compatibility and standalone\n   building have been resolved\n\n- Scripts that are not in the same directory as setup.py now work\n\n- A new recipe has been added that removes the pydoc -> Tkinter dependency\n\n- A recipe has been added for `py2app`_ itself\n\n- a `wxPython`_ example (superdoodle) has been added.\n  Demonstrates not only how easy it is (finally!) to bundle\n  `wxPython`_ applications, but also how one setup.py can\n  deal with both `py2exe`_ and `py2app`_.\n\n- A new experimental tool, py2applet, has been added.\n  Once you've built it (``python setup.py py2app``, of course), you should\n  be able to build simple applications simply by dragging your main script\n  and optionally any packages, data files, Info.plist and icon it needs.\n\nKnown issues:\n\n- Includes *all* files from packages, it should be smart enough to strip\n  unused .py/.pyc/.pyo files (to save space, depending on which\n  optimization flag is used).\n\n- The default ``PyRuntimeLocations`` can cause problems on machines that\n  have a /Library/Frameworks/Python.framework installed.  Workaround is\n  to set a plist that has the following key:\n  ``PyRuntimeLocations=['/System/Library/Frameworks/Python.framework/Versions/2.3/Python']``\n  (this will be resolved soon)\n\n\npy2app 0.1\n----------\n\n(first public release)\n`py2app`_ is the bundlebuilder replacement we've all been waiting\nfor.  It is implemented as a distutils command, similar to `py2exe`_.\n\n.. _`wxPython`: http://www.wxpython.org/\n.. _`py2app`: http://undefined.org/python/#py2app\n.. _`py2exe`: http://starship.python.net/crew/theller/py2exe/\n",
        "description_content_type": "text/x-rst; charset=UTF-8",
        "keywords": [
          ".app",
          "standalone"
        ],
        "home_page": "http://github.com/ronaldoussoren/py2app",
        "download_url": "http://pypi.python.org/pypi/py2app",
        "author": "Ronald Oussoren",
        "author_email": "ronaldoussoren@mac.com",
        "maintainer": "Ronald Oussoren",
        "maintainer_email": "ronaldoussoren@mac.com",
        "license": "MIT or PSF License",
        "license_file": [
          "LICENSE.txt"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Environment :: MacOS X :: Cocoa",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Operating System :: MacOS :: MacOS X",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Objective C",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Software Development :: User Interfaces",
          "Topic :: Software Development :: Build Tools"
        ],
        "requires_dist": [
          "altgraph >=0.17.3",
          "modulegraph >=0.19.6",
          "macholib >=1.16.2",
          "packaging"
        ],
        "project_url": [
          "Documentation, https://py2app.readthedocs.io/en/latest/",
          "Issue tracker, https://github.com/ronaldoussoren/py2app/issues",
          "Repository, https://github.com/ronaldoussoren/py2app"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/py2app-0.28.8.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "certifi",
        "version": "2025.8.3",
        "dynamic": [
          "author",
          "author-email",
          "classifier",
          "description",
          "home-page",
          "license",
          "license-file",
          "project-url",
          "requires-python",
          "summary"
        ],
        "summary": "Python package for providing Mozilla's CA Bundle.",
        "description": "Certifi: Python SSL Certificates\n================================\n\nCertifi provides Mozilla's carefully curated collection of Root Certificates for\nvalidating the trustworthiness of SSL certificates while verifying the identity\nof TLS hosts. It has been extracted from the `Requests`_ project.\n\nInstallation\n------------\n\n``certifi`` is available on PyPI. Simply install it with ``pip``::\n\n    $ pip install certifi\n\nUsage\n-----\n\nTo reference the installed certificate authority (CA) bundle, you can use the\nbuilt-in function::\n\n    >>> import certifi\n\n    >>> certifi.where()\n    '/usr/local/lib/python3.7/site-packages/certifi/cacert.pem'\n\nOr from the command line::\n\n    $ python -m certifi\n    /usr/local/lib/python3.7/site-packages/certifi/cacert.pem\n\nEnjoy!\n\n.. _`Requests`: https://requests.readthedocs.io/en/master/\n\nAddition/Removal of Certificates\n--------------------------------\n\nCertifi does not support any addition/removal or other modification of the\nCA trust store content. This project is intended to provide a reliable and\nhighly portable root of trust to python deployments. Look to upstream projects\nfor methods to use alternate trust.\n",
        "home_page": "https://github.com/certifi/python-certifi",
        "author": "Kenneth Reitz",
        "author_email": "me@kennethreitz.com",
        "license": "MPL-2.0",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
          "Natural Language :: English",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Source, https://github.com/certifi/python-certifi"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/certifi-2025.8.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "PyQt6",
        "version": "6.9.1",
        "summary": "Python bindings for the Qt cross platform application toolkit",
        "description": "# PyQt6 - Comprehensive Python Bindings for Qt v6\n\nQt is set of cross-platform C++ libraries that implement high-level APIs for\naccessing many aspects of modern desktop and mobile systems.  These include\nlocation and positioning services, multimedia, NFC and Bluetooth connectivity,\na Chromium based web browser, as well as traditional UI development.\n\nPyQt6 is a comprehensive set of Python bindings for Qt v6.  It is implemented\nas more than 35 extension modules and enables Python to be used as an\nalternative application development language to C++ on all supported platforms\nincluding iOS and Android.\n\nPyQt6 may also be embedded in C++ based applications to allow users of those\napplications to configure or enhance the functionality of those applications.\n\n\n## Author\n\nPyQt6 is copyright (c) Riverbank Computing Limited.  Its homepage is\nhttps://www.riverbankcomputing.com/software/pyqt/.\n\nSupport may be obtained from the PyQt mailing list at\nhttps://www.riverbankcomputing.com/mailman/listinfo/pyqt/.\n\n\n## License\n\nPyQt6 is released under the GPL v3 license and under a commercial license that\nallows for the development of proprietary applications.\n\n\n## Documentation\n\nThe documentation for the latest release can be found\n[here](https://www.riverbankcomputing.com/static/Docs/PyQt6/).\n\n\n## Installation\n\nThe GPL version of PyQt6 can be installed from PyPI:\n\n    pip install PyQt6\n\n`pip` will also build and install the bindings from the sdist package but Qt's\n`qmake` tool must be on `PATH`.\n\nThe `sip-install` tool will also install the bindings from the sdist package\nbut will allow you to configure many aspects of the installation.\n",
        "description_content_type": "text/markdown",
        "author_email": "Riverbank Computing Limited <info@riverbankcomputing.com>",
        "license_expression": "GPL-3.0-only",
        "license_file": [
          "LICENSE"
        ],
        "requires_dist": [
          "PyQt6-sip (>=13.8, <14)",
          "PyQt6-Qt6 (>=6.9.0, <6.10.0)"
        ],
        "requires_python": ">=3.9",
        "project_url": [
          "homepage, https://www.riverbankcomputing.com/software/pyqt/"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/pyqt6-6.9.1.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "beautifulsoup4",
        "version": "4.13.5",
        "summary": "Screen-scraping library",
        "description": "Beautiful Soup is a library that makes it easy to scrape information\nfrom web pages. It sits atop an HTML or XML parser, providing Pythonic\nidioms for iterating, searching, and modifying the parse tree.\n\n# Quick start\n\n```\n>>> from bs4 import BeautifulSoup\n>>> soup = BeautifulSoup(\"<p>Some<b>bad<i>HTML\")\n>>> print(soup.prettify())\n<html>\n <body>\n  <p>\n   Some\n   <b>\n    bad\n    <i>\n     HTML\n    </i>\n   </b>\n  </p>\n </body>\n</html>\n>>> soup.find(string=\"bad\")\n'bad'\n>>> soup.i\n<i>HTML</i>\n#\n>>> soup = BeautifulSoup(\"<tag1>Some<tag2/>bad<tag3>XML\", \"xml\")\n#\n>>> print(soup.prettify())\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<tag1>\n Some\n <tag2/>\n bad\n <tag3>\n  XML\n </tag3>\n</tag1>\n```\n\nTo go beyond the basics, [comprehensive documentation is available](https://www.crummy.com/software/BeautifulSoup/bs4/doc/).\n\n# Links\n\n* [Homepage](https://www.crummy.com/software/BeautifulSoup/bs4/)\n* [Documentation](https://www.crummy.com/software/BeautifulSoup/bs4/doc/)\n* [Discussion group](https://groups.google.com/group/beautifulsoup/)\n* [Development](https://code.launchpad.net/beautifulsoup/)\n* [Bug tracker](https://bugs.launchpad.net/beautifulsoup/)\n* [Complete changelog](https://git.launchpad.net/beautifulsoup/tree/CHANGELOG)\n\n# Note on Python 2 sunsetting\n\nBeautiful Soup's support for Python 2 was discontinued on December 31,\n2020: one year after the sunset date for Python 2 itself. From this\npoint onward, new Beautiful Soup development will exclusively target\nPython 3. The final release of Beautiful Soup 4 to support Python 2\nwas 4.9.3.\n\n# Supporting the project\n\nIf you use Beautiful Soup as part of your professional work, please consider a\n[Tidelift subscription](https://tidelift.com/subscription/pkg/pypi-beautifulsoup4?utm_source=pypi-beautifulsoup4&utm_medium=referral&utm_campaign=readme).\nThis will support many of the free software projects your organization\ndepends on, not just Beautiful Soup.\n\nIf you use Beautiful Soup for personal projects, the best way to say\nthank you is to read\n[Tool Safety](https://www.crummy.com/software/BeautifulSoup/zine/), a zine I\nwrote about what Beautiful Soup has taught me about software\ndevelopment.\n\n# Building the documentation\n\nThe bs4/doc/ directory contains full documentation in Sphinx\nformat. Run `make html` in that directory to create HTML\ndocumentation.\n\n# Running the unit tests\n\nBeautiful Soup supports unit test discovery using Pytest:\n\n```\n$ pytest\n```\n\n",
        "description_content_type": "text/markdown",
        "keywords": [
          "HTML",
          "XML",
          "parse",
          "soup"
        ],
        "author_email": "Leonard Richardson <leonardr@segfault.org>",
        "license": "MIT License",
        "license_file": [
          "AUTHORS",
          "LICENSE"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Text Processing :: Markup :: HTML",
          "Topic :: Text Processing :: Markup :: SGML",
          "Topic :: Text Processing :: Markup :: XML"
        ],
        "requires_dist": [
          "soupsieve>1.2",
          "typing-extensions>=4.0.0",
          "cchardet; extra == 'cchardet'",
          "chardet; extra == 'chardet'",
          "charset-normalizer; extra == 'charset-normalizer'",
          "html5lib; extra == 'html5lib'",
          "lxml; extra == 'lxml'"
        ],
        "requires_python": ">=3.7.0",
        "project_url": [
          "Download, https://www.crummy.com/software/BeautifulSoup/bs4/download/",
          "Homepage, https://www.crummy.com/software/BeautifulSoup/bs4/"
        ],
        "provides_extra": [
          "cchardet",
          "chardet",
          "charset-normalizer",
          "html5lib",
          "lxml"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/beautifulsoup4-4.13.5.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.2",
        "name": "pip",
        "version": "25.0.1",
        "summary": "The PyPA recommended tool for installing Python packages.",
        "description": "pip - The Python Package Installer\n==================================\n\n.. |pypi-version| image:: https://img.shields.io/pypi/v/pip.svg\n   :target: https://pypi.org/project/pip/\n   :alt: PyPI\n\n.. |python-versions| image:: https://img.shields.io/pypi/pyversions/pip\n   :target: https://pypi.org/project/pip\n   :alt: PyPI - Python Version\n\n.. |docs-badge| image:: https://readthedocs.org/projects/pip/badge/?version=latest\n   :target: https://pip.pypa.io/en/latest\n   :alt: Documentation\n\n|pypi-version| |python-versions| |docs-badge|\n\npip is the `package installer`_ for Python. You can use pip to install packages from the `Python Package Index`_ and other indexes.\n\nPlease take a look at our documentation for how to install and use pip:\n\n* `Installation`_\n* `Usage`_\n\nWe release updates regularly, with a new version every 3 months. Find more details in our documentation:\n\n* `Release notes`_\n* `Release process`_\n\nIf you find bugs, need help, or want to talk to the developers, please use our mailing lists or chat rooms:\n\n* `Issue tracking`_\n* `Discourse channel`_\n* `User IRC`_\n\nIf you want to get involved head over to GitHub to get the source code, look at our development documentation and feel free to jump on the developer mailing lists and chat rooms:\n\n* `GitHub page`_\n* `Development documentation`_\n* `Development IRC`_\n\nCode of Conduct\n---------------\n\nEveryone interacting in the pip project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the `PSF Code of Conduct`_.\n\n.. _package installer: https://packaging.python.org/guides/tool-recommendations/\n.. _Python Package Index: https://pypi.org\n.. _Installation: https://pip.pypa.io/en/stable/installation/\n.. _Usage: https://pip.pypa.io/en/stable/\n.. _Release notes: https://pip.pypa.io/en/stable/news.html\n.. _Release process: https://pip.pypa.io/en/latest/development/release-process/\n.. _GitHub page: https://github.com/pypa/pip\n.. _Development documentation: https://pip.pypa.io/en/latest/development\n.. _Issue tracking: https://github.com/pypa/pip/issues\n.. _Discourse channel: https://discuss.python.org/c/packaging\n.. _User IRC: https://kiwiirc.com/nextclient/#ircs://irc.libera.chat:+6697/pypa\n.. _Development IRC: https://kiwiirc.com/nextclient/#ircs://irc.libera.chat:+6697/pypa-dev\n.. _PSF Code of Conduct: https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\n",
        "description_content_type": "text/x-rst",
        "author_email": "The pip developers <distutils-sig@python.org>",
        "license": "MIT",
        "license_file": [
          "LICENSE.txt",
          "AUTHORS.txt"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Topic :: Software Development :: Build Tools",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Homepage, https://pip.pypa.io/",
          "Documentation, https://pip.pypa.io",
          "Source, https://github.com/pypa/pip",
          "Changelog, https://pip.pypa.io/en/stable/news/"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/pip-25.0.1.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "soupsieve",
        "version": "2.8",
        "summary": "A modern CSS selector implementation for Beautiful Soup.",
        "description": "[![Donate via PayPal][donate-image]][donate-link]\n[![Build][github-ci-image]][github-ci-link]\n[![Coverage Status][codecov-image]][codecov-link]\n[![PyPI Version][pypi-image]][pypi-link]\n[![PyPI Downloads][pypi-down]][pypi-link]\n[![PyPI - Python Version][python-image]][pypi-link]\n[![License][license-image-mit]][license-link]\n\n# Soup Sieve\n\n## Overview\n\nSoup Sieve is a CSS selector library designed to be used with [Beautiful Soup 4][bs4]. It aims to provide selecting,\nmatching, and filtering using modern CSS selectors. Soup Sieve currently provides selectors from the CSS level 1\nspecifications up through the latest CSS level 4 drafts and beyond (though some are not yet implemented).\n\nSoup Sieve was written with the intent to replace Beautiful Soup's builtin select feature, and as of Beautiful Soup\nversion 4.7.0, it now is :confetti_ball:. Soup Sieve can also be imported in order to use its API directly for\nmore controlled, specialized parsing.\n\nSoup Sieve has implemented most of the CSS selectors up through the latest CSS draft specifications, though there are a\nnumber that don't make sense in a non-browser environment. Selectors that cannot provide meaningful functionality simply\ndo not match anything. Some of the supported selectors are:\n\n- `.classes`\n- `#ids`\n- `[attributes=value]`\n- `parent child`\n- `parent > child`\n- `sibling ~ sibling`\n- `sibling + sibling`\n- `:not(element.class, element2.class)`\n- `:is(element.class, element2.class)`\n- `parent:has(> child)`\n- and [many more](https://facelessuser.github.io/soupsieve/selectors/)\n\n\n## Installation\n\nYou must have Beautiful Soup already installed:\n\n```\npip install beautifulsoup4\n```\n\nIn most cases, assuming you've installed version 4.7.0, that should be all you need to do, but if you've installed via\nsome alternative method, and Soup Sieve is not automatically installed, you can install it directly:\n\n```\npip install soupsieve\n```\n\nIf you want to manually install it from source, first ensure that [`build`](https://pypi.org/project/build/) is\ninstalled:\n\n```\npip install build\n```\n\nThen navigate to the root of the project and build the wheel and install (replacing `<ver>` with the current version):\n\n```\npython -m build -w\npip install dist/soupsieve-<ver>-py3-none-any.whl\n```\n\n## Documentation\n\nDocumentation is found here: https://facelessuser.github.io/soupsieve/.\n\n## License\n\nMIT\n\n[bs4]: https://beautiful-soup-4.readthedocs.io/en/latest/#\n\n[github-ci-image]: https://github.com/facelessuser/soupsieve/workflows/build/badge.svg\n[github-ci-link]: https://github.com/facelessuser/soupsieve/actions?query=workflow%3Abuild+branch%3Amain\n[codecov-image]: https://img.shields.io/codecov/c/github/facelessuser/soupsieve/master.svg?logo=codecov&logoColor=aaaaaa&labelColor=333333\n[codecov-link]: https://codecov.io/github/facelessuser/soupsieve\n[pypi-image]: https://img.shields.io/pypi/v/soupsieve.svg?logo=pypi&logoColor=aaaaaa&labelColor=333333\n[pypi-down]: https://img.shields.io/pypi/dm/soupsieve.svg?logo=pypi&logoColor=aaaaaa&labelColor=333333\n[pypi-link]: https://pypi.python.org/pypi/soupsieve\n[python-image]: https://img.shields.io/pypi/pyversions/soupsieve?logo=python&logoColor=aaaaaa&labelColor=333333\n[license-image-mit]: https://img.shields.io/badge/license-MIT-blue.svg?labelColor=333333\n[license-link]: https://github.com/facelessuser/soupsieve/blob/main/LICENSE.md\n[donate-image]: https://img.shields.io/badge/Donate-PayPal-3fabd1?logo=paypal\n[donate-link]: https://www.paypal.me/facelessuser\n",
        "description_content_type": "text/markdown",
        "keywords": [
          "CSS",
          "HTML",
          "XML",
          "filter",
          "query",
          "selector",
          "soup"
        ],
        "author_email": "Isaac Muse <Isaac.Muse@gmail.com>",
        "license_expression": "MIT",
        "license_file": [
          "LICENSE.md"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.14",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Typing :: Typed"
        ],
        "requires_python": ">=3.9",
        "project_url": [
          "Homepage, https://github.com/facelessuser/soupsieve"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/soupsieve-2.8.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "typing_extensions",
        "version": "4.15.0",
        "summary": "Backported and Experimental Type Hints for Python 3.9+",
        "description": "# Typing Extensions\n\n[![Chat at https://gitter.im/python/typing](https://badges.gitter.im/python/typing.svg)](https://gitter.im/python/typing)\n\n[Documentation](https://typing-extensions.readthedocs.io/en/latest/#) –\n[PyPI](https://pypi.org/project/typing-extensions/)\n\n## Overview\n\nThe `typing_extensions` module serves two related purposes:\n\n- Enable use of new type system features on older Python versions. For example,\n  `typing.TypeGuard` is new in Python 3.10, but `typing_extensions` allows\n  users on previous Python versions to use it too.\n- Enable experimentation with new type system PEPs before they are accepted and\n  added to the `typing` module.\n\n`typing_extensions` is treated specially by static type checkers such as\nmypy and pyright. Objects defined in `typing_extensions` are treated the same\nway as equivalent forms in `typing`.\n\n`typing_extensions` uses\n[Semantic Versioning](https://semver.org/). The\nmajor version will be incremented only for backwards-incompatible changes.\nTherefore, it's safe to depend\non `typing_extensions` like this: `typing_extensions ~=x.y`,\nwhere `x.y` is the first version that includes all features you need.\n[This](https://packaging.python.org/en/latest/specifications/version-specifiers/#compatible-release)\nis equivalent to `typing_extensions >=x.y, <(x+1)`. Do not depend on `~= x.y.z`\nunless you really know what you're doing; that defeats the purpose of\nsemantic versioning.\n\n## Included items\n\nSee [the documentation](https://typing-extensions.readthedocs.io/en/latest/#) for a\ncomplete listing of module contents.\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/python/typing_extensions/blob/main/CONTRIBUTING.md)\nfor how to contribute to `typing_extensions`.\n\n",
        "description_content_type": "text/markdown",
        "keywords": [
          "annotations",
          "backport",
          "checker",
          "checking",
          "function",
          "hinting",
          "hints",
          "type",
          "typechecking",
          "typehinting",
          "typehints",
          "typing"
        ],
        "author_email": "\"Guido van Rossum, Jukka Lehtosalo, Łukasz Langa, Michael Lee\" <levkivskyi@gmail.com>",
        "license_expression": "PSF-2.0",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.14",
          "Topic :: Software Development"
        ],
        "requires_python": ">=3.9",
        "project_url": [
          "Bug Tracker, https://github.com/python/typing_extensions/issues",
          "Changes, https://github.com/python/typing_extensions/blob/main/CHANGELOG.md",
          "Documentation, https://typing-extensions.readthedocs.io/",
          "Home, https://github.com/python/typing_extensions",
          "Q & A, https://github.com/python/typing/discussions",
          "Repository, https://github.com/python/typing_extensions"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/typing_extensions-4.15.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "packaging",
        "version": "25.0",
        "summary": "Core utilities for Python packages",
        "description": "packaging\n=========\n\n.. start-intro\n\nReusable core utilities for various Python Packaging\n`interoperability specifications <https://packaging.python.org/specifications/>`_.\n\nThis library provides utilities that implement the interoperability\nspecifications which have clearly one correct behaviour (eg: :pep:`440`)\nor benefit greatly from having a single shared implementation (eg: :pep:`425`).\n\n.. end-intro\n\nThe ``packaging`` project includes the following: version handling, specifiers,\nmarkers, requirements, tags, utilities.\n\nDocumentation\n-------------\n\nThe `documentation`_ provides information and the API for the following:\n\n- Version Handling\n- Specifiers\n- Markers\n- Requirements\n- Tags\n- Utilities\n\nInstallation\n------------\n\nUse ``pip`` to install these utilities::\n\n    pip install packaging\n\nThe ``packaging`` library uses calendar-based versioning (``YY.N``).\n\nDiscussion\n----------\n\nIf you run into bugs, you can file them in our `issue tracker`_.\n\nYou can also join ``#pypa`` on Freenode to ask questions or get involved.\n\n\n.. _`documentation`: https://packaging.pypa.io/\n.. _`issue tracker`: https://github.com/pypa/packaging/issues\n\n\nCode of Conduct\n---------------\n\nEveryone interacting in the packaging project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the `PSF Code of Conduct`_.\n\n.. _PSF Code of Conduct: https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\n\nContributing\n------------\n\nThe ``CONTRIBUTING.rst`` file outlines how to contribute to this project as\nwell as how to report a potential security issue. The documentation for this\nproject also covers information about `project development`_ and `security`_.\n\n.. _`project development`: https://packaging.pypa.io/en/latest/development/\n.. _`security`: https://packaging.pypa.io/en/latest/security/\n\nProject History\n---------------\n\nPlease review the ``CHANGELOG.rst`` file or the `Changelog documentation`_ for\nrecent changes and project history.\n\n.. _`Changelog documentation`: https://packaging.pypa.io/en/latest/changelog/\n\n",
        "description_content_type": "text/x-rst",
        "author_email": "Donald Stufft <donald@stufft.io>",
        "license_file": [
          "LICENSE",
          "LICENSE.APACHE",
          "LICENSE.BSD"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Typing :: Typed"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Documentation, https://packaging.pypa.io/",
          "Source, https://github.com/pypa/packaging"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/packaging-25.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "PyYAML",
        "version": "6.0.2",
        "platform": [
          "Any"
        ],
        "summary": "YAML parser and emitter for Python",
        "description": "YAML is a data serialization format designed for human readability\nand interaction with scripting languages.  PyYAML is a YAML parser\nand emitter for Python.\n\nPyYAML features a complete YAML 1.1 parser, Unicode support, pickle\nsupport, capable extension API, and sensible error messages.  PyYAML\nsupports standard YAML tags and provides Python-specific tags that\nallow to represent an arbitrary Python object.\n\nPyYAML is applicable for a broad range of tasks from complex\nconfiguration files to object serialization and persistence.\n",
        "home_page": "https://pyyaml.org/",
        "download_url": "https://pypi.org/project/PyYAML/",
        "author": "Kirill Simonov",
        "author_email": "xi@resolvent.net",
        "license": "MIT",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Cython",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Text Processing :: Markup"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Bug Tracker, https://github.com/yaml/pyyaml/issues",
          "CI, https://github.com/yaml/pyyaml/actions",
          "Documentation, https://pyyaml.org/wiki/PyYAMLDocumentation",
          "Mailing lists, http://lists.sourceforge.net/lists/listinfo/yaml-core",
          "Source Code, https://github.com/yaml/pyyaml"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.4",
        "name": "PyQt6_sip",
        "version": "13.10.2",
        "dynamic": [
          "license",
          "license-file",
          "requires-python"
        ],
        "platform": [
          "X11",
          "macOS",
          "Windows"
        ],
        "summary": "The sip module support for PyQt6",
        "description": "sip Extension Module\n====================\n\nThe sip extension module provides support for the PyQt6 package.\n",
        "home_page": "https://github.com/Python-SIP/sip",
        "author": "Phil Thompson",
        "author_email": "phil@riverbankcomputing.com",
        "license": "BSD-2-Clause",
        "license_file": [
          "LICENSE"
        ],
        "requires_python": ">=3.9"
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/pyqt6_sip-13.10.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "setuptools",
        "version": "70.3.0",
        "summary": "Easily download, build, install, upgrade, and uninstall Python packages",
        "description": ".. |pypi-version| image:: https://img.shields.io/pypi/v/setuptools.svg\n   :target: https://pypi.org/project/setuptools\n\n.. |py-version| image:: https://img.shields.io/pypi/pyversions/setuptools.svg\n\n.. |test-badge| image:: https://github.com/pypa/setuptools/actions/workflows/main.yml/badge.svg\n   :target: https://github.com/pypa/setuptools/actions?query=workflow%3A%22tests%22\n   :alt: tests\n\n.. |ruff-badge| image:: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json\n   :target: https://github.com/astral-sh/ruff\n   :alt: Ruff\n\n.. |docs-badge| image:: https://img.shields.io/readthedocs/setuptools/latest.svg\n   :target: https://setuptools.pypa.io\n\n.. |skeleton-badge| image:: https://img.shields.io/badge/skeleton-2024-informational\n   :target: https://blog.jaraco.com/skeleton\n\n.. |codecov-badge| image:: https://img.shields.io/codecov/c/github/pypa/setuptools/master.svg?logo=codecov&logoColor=white\n   :target: https://codecov.io/gh/pypa/setuptools\n\n.. |tidelift-badge| image:: https://tidelift.com/badges/github/pypa/setuptools?style=flat\n   :target: https://tidelift.com/subscription/pkg/pypi-setuptools?utm_source=pypi-setuptools&utm_medium=readme\n\n.. |discord-badge| image:: https://img.shields.io/discord/803025117553754132\n   :target: https://discord.com/channels/803025117553754132/815945031150993468\n   :alt: Discord\n\n|pypi-version| |py-version| |test-badge| |ruff-badge| |docs-badge| |skeleton-badge| |codecov-badge| |discord-badge|\n\nSee the `Quickstart <https://setuptools.pypa.io/en/latest/userguide/quickstart.html>`_\nand the `User's Guide <https://setuptools.pypa.io/en/latest/userguide/>`_ for\ninstructions on how to use Setuptools.\n\nQuestions and comments should be directed to `GitHub Discussions\n<https://github.com/pypa/setuptools/discussions>`_.\nBug reports and especially tested patches may be\nsubmitted directly to the `bug tracker\n<https://github.com/pypa/setuptools/issues>`_.\n\n\nCode of Conduct\n===============\n\nEveryone interacting in the setuptools project's codebases, issue trackers,\nchat rooms, and fora is expected to follow the\n`PSF Code of Conduct <https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md>`_.\n\n\nFor Enterprise\n==============\n\nAvailable as part of the Tidelift Subscription.\n\nSetuptools and the maintainers of thousands of other packages are working with Tidelift to deliver one enterprise subscription that covers all of the open source you use.\n\n`Learn more <https://tidelift.com/subscription/pkg/pypi-setuptools?utm_source=pypi-setuptools&utm_medium=referral&utm_campaign=github>`_.\n",
        "description_content_type": "text/x-rst",
        "keywords": [
          "CPAN",
          "PyPI",
          "distutils",
          "eggs",
          "package",
          "management"
        ],
        "author_email": "Python Packaging Authority <distutils-sig@python.org>",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: System :: Archiving :: Packaging",
          "Topic :: System :: Systems Administration",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "sphinx >=3.5 ; extra == 'doc'",
          "jaraco.packaging >=9.3 ; extra == 'doc'",
          "rst.linker >=1.9 ; extra == 'doc'",
          "furo ; extra == 'doc'",
          "sphinx-lint ; extra == 'doc'",
          "jaraco.tidelift >=1.4 ; extra == 'doc'",
          "pygments-github-lexers ==0.0.5 ; extra == 'doc'",
          "sphinx-favicon ; extra == 'doc'",
          "sphinx-inline-tabs ; extra == 'doc'",
          "sphinx-reredirects ; extra == 'doc'",
          "sphinxcontrib-towncrier ; extra == 'doc'",
          "sphinx-notfound-page <2,>=1 ; extra == 'doc'",
          "pyproject-hooks !=1.1 ; extra == 'doc'",
          "pytest !=8.1.*,>=6 ; extra == 'test'",
          "pytest-checkdocs >=2.4 ; extra == 'test'",
          "pytest-cov ; extra == 'test'",
          "pytest-mypy ; extra == 'test'",
          "pytest-enabler >=2.2 ; extra == 'test'",
          "virtualenv >=13.0.0 ; extra == 'test'",
          "wheel ; extra == 'test'",
          "pip >=19.1 ; extra == 'test'",
          "packaging >=23.2 ; extra == 'test'",
          "jaraco.envs >=2.2 ; extra == 'test'",
          "pytest-xdist >=3 ; extra == 'test'",
          "jaraco.path >=3.2.0 ; extra == 'test'",
          "build[virtualenv] >=1.0.3 ; extra == 'test'",
          "filelock >=3.4.0 ; extra == 'test'",
          "ini2toml[lite] >=0.14 ; extra == 'test'",
          "tomli-w >=1.0.0 ; extra == 'test'",
          "pytest-timeout ; extra == 'test'",
          "pytest-home >=0.5 ; extra == 'test'",
          "mypy ==1.10.0 ; extra == 'test'",
          "tomli ; extra == 'test'",
          "importlib-metadata ; extra == 'test'",
          "pytest-subprocess ; extra == 'test'",
          "pyproject-hooks !=1.1 ; extra == 'test'",
          "jaraco.test ; extra == 'test'",
          "jaraco.develop >=7.21 ; (python_version >= \"3.9\" and sys_platform != \"cygwin\") and extra == 'test'",
          "pytest-ruff >=0.3.2 ; (sys_platform != \"cygwin\") and extra == 'test'",
          "pytest-perf ; (sys_platform != \"cygwin\") and extra == 'test'"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Source, https://github.com/pypa/setuptools",
          "Documentation, https://setuptools.pypa.io/",
          "Changelog, https://setuptools.pypa.io/en/stable/history.html"
        ],
        "provides_extra": [
          "certs",
          "doc",
          "ssl",
          "test"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/setuptools-70.3.0.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "PyQt6-Qt6",
        "version": "6.9.2",
        "platform": [
          "Linux",
          "macOS",
          "Windows"
        ],
        "summary": "The subset of a Qt installation needed by PyQt6.",
        "description": "This package contains the subset of a Qt installation that is required by\nPyQt6.  It would normally be installed automatically by pip when\nyou install PyQt6.\n\nThis package is licensed under the terms of the LGPL v3.\n",
        "home_page": "https://www.riverbankcomputing.com/software/pyqt/",
        "author": "Riverbank Computing Limited",
        "author_email": "info@riverbankcomputing.com",
        "license": "LGPL v3"
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/pyqt6_qt6-6.9.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "macholib",
        "version": "1.16.3",
        "platform": [
          "any"
        ],
        "summary": "Mach-O header analysis and editing",
        "description": "macholib can be used to analyze and edit Mach-O headers, the executable\nformat used by Mac OS X.\n\nIt's typically used as a dependency analysis tool, and also to rewrite dylib\nreferences in Mach-O headers to be @executable_path relative.\n\nThough this tool targets a platform specific file format, it is pure python\ncode that is platform and endian independent.\n\nCI Status\n---------\n\n* .. image:: https://github.com/ronaldoussoren/macholib/workflows/Lint/badge.svg\n* .. image:: https://github.com/ronaldoussoren/macholib/workflows/Test/badge.svg\n\nProject links\n-------------\n\n* `Documentation <https://macholib.readthedocs.io/en/latest/>`_\n\n* `Issue Tracker <https://github.com/ronaldoussoren/macholib>`_\n\n* `Repository <https://github.com/ronaldoussoren/macholib/>`_\n\n\nRelease history\n===============\n\nmacholib 1.16.2\n---------------\n\n* Update classifiers for Python 3.11\n\nmacholib 1.16.1\n---------------\n\n* Added some new CPU subtype definitions\n\nmacholib 1.16\n-------------\n\n* Add ``allow_unknown_load_commands`` option to ``MachO`` and\n  ```macholib.MachOHeader``.\n\n  PR by github user bhamiltoncx.\n\n\nmacholib 1.15.2\n---------------\n\n* Explicitly mention Python 3.10 in the project metadata\n\nmacholib 1.15.1\n---------------\n\n* Remove a debug print introduced in the previous release.\n\nmacholib 1.15\n---------------\n\n* Add support for new features in the macOS 11 SDK\n\n* Fix link to repository in README.rst\n\n* Fix ``macholib.dyld.dyld_find`` for system libraries on macOS 11 or later\n\nmacholib 1.14\n-------------\n\n* Repository moved to GitHub\n\n* #32: Update the LC_NAMES table\n\nmacholib 1.13\n-------------\n\n# 31: Add two new load commands introduced in macOS 10.15\n\nmacholib 1.12\n-------------\n\n* #27: Missing describe method for build_version_command\n\nmacholib 1.11\n-------------\n\n* Add very hacky limited support for @loader_path. This is just\n  enough to deal with extensions and dylibs found in Python\n  binary wheels.\n\nmacholib 1.10\n-------------\n\n* #25: Add support for LC_NOTE and LC_BUILD_VERSION\n\nmacholib 1.9\n------------\n\nFeatures:\n\n* Add definition for ``macholib.mach_o.reloc_type_generic``, which\n  was used in code but never defined.\n\n* #22: Add LICENSE file\n\n* #23: Added \"--help\" option for \"python -m macholib\"\n\n* Added function ``macholib.MachO.lc_str_value`` which should\n  help in decoding value of ``macholib.mach_o.lc_str``. Those\n  values are offsets in the data of a load command, the function\n  will return the actually value as a byte string.\n\n  See also issue #21.\n\nBug fixes:\n\n* Pull request #15: Fix typo in thread_command class\n\n  Patch by user \"phdphuc\" on bitbucket.\n\nmacholib 1.8\n------------\n\n* Use the same dependency walk logic as otool\n\n  Patch by Taras Tsugrii <ttsugrii@fb.com>\n\n* Added support for new load commands\n\n  Patch by David Dorsey <trogdorsey@gmail.com>,\n  with enhancements by Ronald Oussoren.\n\n* Fix procesing DSYM file from XCODE 6.x\n\n  Patch by HolmsBlazhey <andrey.blazhey@gmail.com>\n\n* MachOGraph.locate(): When calling dyld_find(), use kwarg 'loader_path', not 'loader'.\n\n  Patch by Stuart Berg <bergs@janelia.hhmi.org>\n\n* Add fields to thread_command\n\n  Patch by Asger Hautop Drewsen <asgerdrewsen@gmail.com>\n\n* Add missing ARM_V7S subtype.\n\n  Patch by \"NN\"\n\n* Fix for SymbolTable\n\n  Patch by Christian Klein <chris@5711.org>\n\n* Use first Mach-O header as the default header\n\n  Patch by Christian Klein <chris@5711.org>\n\n* Issue #17: add LC_LOAD_UPWARD_DYLIB to _RELOCATABLE set\n\n* Issue #16: macholib \"hangs\" on invalid input\n\n  Due to the use of the range function on untrusted input\n  the python process could hang when reading invalid input, due\n  to trying to construct an enormous list.\n\n* Issue #18: Bad version parsing in macho_version_helper\n\n  The order of subfields in ``mach_version_helper`` was reversed from\n  reality.\n\n* Issue #19: Fix aligment issue that prevented code signing\n\n  Patch by Brendan Simon\n\n* Fix issue #14: Can't pass endian argument to p_uint64.from_str\n\n\nmacholib 1.7\n------------\n\n* Added support for ARM64, LC_ENCRYPTION_INFO_64 and LC_LINKER_OPTION\n\n  Patch by Matthias Ringwald.\n\n* Load commands now have a \"describe\" method that returns more information\n  about the command.\n\n  Patch by David Dorsey.\n\n* The MAGIC value in the header was always represented in the native\n  byte order, instead of as the value read from the binary.\n\n  Patch by David Dorsey.\n\n* Added various new constants to \"macholib.mach_o\".\n\n  Patch by David Dorsey.\n\nmacholib 1.6.1\n--------------\n\n* ?\n\nmacholib 1.6\n------------\n\n* Add support for '@loader_path' link command in\n  macholib.dyld:\n\n  - Added function ``macholib.dyld.dyld_loader_search``\n\n  - This function is used by ``macholib.dyld.dyld_find``,\n    and that function now has an new (optional) argument\n    with the path to the loader.\n\n* Also add support for '@loader_path' to macholib.MachoGraph,\n  using the newly added '@loader_path' support in the\n  dyld module.\n\n  Due to this suppport the *macho_standalone* tool can\n  now rewrite binaries that contain an '@loader_path' load\n  command.\n\n\nmacholib 1.5.2\n--------------\n\n* Issue #93: Show the name of the affected file in the exception message\n  for Mach-O headers that are too large to relocate.\n\n\nmacholib 1.5.1\n--------------\n\n* There were no 'classifiers' in the package metadata due to\n  a bug in setup.py.\n\nmacholib 1.5\n--------------\n\nmacholib 1.5 is a minor feature release\n\n* No longer use 2to3 to provide Python 3 support\n\n  As a side-effect of this macholib no longer supports\n  Python 2.5 and earlier.\n\n* Adds suppport for some new macho load commands\n\n* Fix for py3k problem in macho_standalone.py\n\n  Patch by Guanqun Lu.\n\n* Fix for some issues in macho_dump.py\n\n  Patch by Nam Nguyen\n\n* Issue #10: Fix for LC_DATA_IN_CODE linker commands, without\n  this fix py2app cannot build application bundles when\n  the source binaries have been compiled with Xcode 4.5.\n\n* Issue #6: Fix for LC_ENCRYPTION_INFO linker commands\n\n* Use the mach header information to print the cpu type of a\n  binary, instead of trying to deduce that from pointer width\n  and endianness.\n\n  Changed the code because of issue #6, in which a user tries to\n  dump a iOS binary which results in bogus output in the previous\n  releases.\n\n* The mapping ``macholib.macho_dump.ARCH_MAP`` is undocumented\n  and no longer used by macholib itself. It will be removed\n  in the next release.\n\n\n* The command-line tools ``macho_find``, ``macho_dump`` and\n  ``macho_standalone`` are deprecated. Use \"python -mmacholib\"\n  instead. That is::\n\n   $ python -mmacholib dump /usr/bin/grep\n\n   $ python -mmacholib find ~\n\n   $ python -mmacholib standalone myapp.app\n\n  This makes it clearer which version of the tools are used.\n\nmacholib 1.4.3\n--------------\n\nmacholib 1.4.3 is a minor feature release\n\n* Added strings for 'x86_64' and 'ppc64' to\n  macholib.mach_o.CPU_TYPE_NAMES.\n\n* macho_find and macho_dump were broken in the 1.4.2 release\n\n* added 'macholib.util.NOT_SYSTEM_FILES', a list of\n  files that aren't system path's even though they are\n  located in system locations.\n\n  Needed to work around a bug in PySide (see issue #32 in the\n  py2app tracker)\n\n\n\nmacholib 1.4.2\n--------------\n\nmacholib 1.4.2 is a minor bugfix release\n\n* The support for new load commands that was added in 1.4.1\n  contained a typo that caused problems on OSX 10.7 (Lion).\n\nmacholib 1.4.1\n--------------\n\nmacholib 1.4.1 is a minor feature release\n\nFeatures:\n\n- Add support for a number of new MachO load commands that were added\n  during the lifetime of OSX 10.6: ``LC_LOAD_UPWARD_DYLIB``,\n  ``LC_VERSION_MIN_MACOSX``, ``LC_VERSION_MIN_IPHONEOS`` and\n  ``LC_FUNCTION_STARTS``.\n\nmacholib 1.4\n-------------\n\nmacholib 1.4 is a feature release\n\nFeatures:\n\n- Documentation is now generated using `sphinx <http://pypi.python.org/pypi/sphinx>`_\n  and can be viewed at <http://packages.python.org/macholib>.\n\n- The repository has moved to bitbucket\n\n- There now is a testsuite\n\n- Private functionality inside modules was renamed to\n  a name starting with an underscore.\n\n  .. note:: if this change affects your code you are relying on undefined\n     implementation features, please stop using private functions.\n\n- The basic packable types in ``macholib.ptypes`` were renamed to better\n  represent the corresponding C type. The table below lists the old\n  an new names (the old names are still available, but are deprecated and\n  will be removed in a future release).\n\n  +--------------+--------------+\n  | **Old name** | **New name** |\n  +==============+==============+\n  | p_byte       | p_int8       |\n  +--------------+--------------+\n  | p_ubyte      | p_uint8      |\n  +--------------+--------------+\n  | p_short      | p_int16      |\n  +--------------+--------------+\n  | p_ushort     | p_uint16     |\n  +--------------+--------------+\n  | p_int        | p_int32      |\n  +--------------+--------------+\n  | p_uint       | p_uint32     |\n  +--------------+--------------+\n  | p_long       | p_int32      |\n  +--------------+--------------+\n  | p_ulong      | p_uint32     |\n  +--------------+--------------+\n  | p_longlong   | p_int64      |\n  +--------------+--------------+\n  | p_ulonglong  | p_uint64     |\n  +--------------+--------------+\n\n  ``Macholib.ptypes.p_ptr`` is no longer present as it had an unclear\n  definition and isn't actually used in the codebase.\n\n\nBug fixes:\n\n- The semantics of ``dyld.dyld_default_search`` were changed a bit,\n  it now first searches the framework path (if appropriate) and then\n  the linker path, irrespective of the value of the ``DYLD_FALLBACK*``\n  environment variables.\n\n  Previous versions would change the search order when those variables\n  was set, which is odd and doesn't correspond with the documented\n  behaviour of the system dyld.\n\n- It is once again possible to install using python2.5\n\n- The source distribution includes all files, this was broken\n  due to the switch to mercurial (which confused setuptools)\n\nmacholib 1.3\n------------\n\nmacholib 1.3 is a feature release.\n\nFeatures:\n\n- Experimental Python 3.x support\n\n  This version contains lightly tested support for Python 3.\n\nmacholib 1.2.2\n--------------\n\nmacholib 1.2.2 is a bugfix release.\n\nBug fixes:\n\n- Macholib should work better with 64-bit code\n  (patch by Marc-Antoine Parent)\n",
        "description_content_type": "text/x-rst; charset=UTF-8",
        "keywords": [
          "Mach-O",
          "",
          "dyld"
        ],
        "home_page": "http://github.com/ronaldoussoren/macholib",
        "download_url": "http://pypi.python.org/pypi/macholib",
        "author": "Ronald Oussoren",
        "author_email": "ronaldoussoren@mac.com",
        "maintainer": "Ronald Oussoren",
        "maintainer_email": "ronaldoussoren@mac.com",
        "license": "MIT",
        "license_file": [
          "LICENSE"
        ],
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Operating System :: MacOS :: MacOS X",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Software Development :: Build Tools"
        ],
        "requires_dist": [
          "altgraph (>=0.17)"
        ],
        "project_url": [
          "Documentation, https://macholib.readthedocs.io/en/latest/",
          "Issue tracker, https://github.com/ronaldoussoren/macholib/issues",
          "Repository, https://github.com/ronaldoussoren/macholib"
        ]
      },
      "metadata_location": "/Users/vaishnav/Documents/Projects/PacMan/.venv/lib/python3.12/site-packages/macholib-1.16.3.dist-info",
      "installer": "pip",
      "requested": false
    }
  ],
  "environment": {
    "implementation_name": "cpython",
    "implementation_version": "3.12.10",
    "os_name": "posix",
    "platform_machine": "arm64",
    "platform_release": "24.6.0",
    "platform_system": "Darwin",
    "platform_version": "Darwin Kernel Version 24.6.0: Mon Jul 14 11:30:40 PDT 2025; root:xnu-11417.140.69~1/RELEASE_ARM64_T8132",
    "python_full_version": "3.12.10",
    "platform_python_implementation": "CPython",
    "python_version": "3.12",
    "sys_platform": "darwin"
  }
}
